{"openapi":"3.1.0","info":{"title":"TerraAPI","description":"The Terra API","contact":{},"version":"2022.03.16"},"jsonSchemaDialect":"https://json-schema.org/draft/2020-12/schema","servers":[{"url":"https://api.tryterra.co/v2","variables":{}}],"paths":{"/auth/authenticateUser":{"post":{"tags":["Authentication"],"summary":"AuthenticateUser","description":"Creates a login link that allows end users to connect their fitness tracking account","operationId":"AuthenticateUser","parameters":[{"name":"resource","in":"query","description":"resource to authenticate user with","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/AuthAuthenticateUserRequest"},{}],"contentMediaType":"application/json"}}},"required":false},"responses":{"200":{"description":"Returned when authentication link could be successfully generated","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthAuthenticateUserResponse"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthAuthenticateUser400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. resource)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthAuthenticateUser404Error1"}}}}},"deprecated":false},"parameters":[]},"/auth/generateWidgetSession":{"post":{"tags":["Authentication"],"summary":"GenerateWidgetSession","description":"Generates a link to redirect an end user to for them to select an integration and log in with their fitness data provider","operationId":"GenerateWidgetSession","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/WidgetSessionParams"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"200":{"description":"Returned when authentication link could be successfully generated","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthGenerateWidgetSessionResponse"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthGenerateWidgetSession400Error1"}}}}},"deprecated":false},"parameters":[]},"/auth/deauthenticateUser":{"delete":{"tags":["Authentication"],"summary":"DeauthenticateUser","description":"Deletes all records of the user on Terra's end, revoking Terra's access to their data","operationId":"DeauthenticateUser","parameters":[{"name":"user_id","in":"query","description":"user_id to deauthenticate for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"responses":{"200":{"description":"Returned when authentication link could be successfully generated","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthDeauthenticateUserResponse"}}}},"404":{"description":"Returned when the user_id is not existent","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthDeauthenticateUser404Error1"}}}}},"deprecated":false},"parameters":[]},"/auth/generateAuthToken":{"post":{"tags":["Authentication"],"summary":"generate-authentication-token","description":"Creates a token to be used with initConnection() functions in the Terra mobile SDKs in order to create a user record for Apple Health or Samsung Health (or equivalent)","operationId":"generate-authentication-token","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"responses":{"200":{"description":"200","headers":{},"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/AuthGenerateAuthTokenResponse"},{"examples":[{"status":"success","token":"250c68b9c21b78e40e7a3285a2d538d3bc24aabd3b4c76a782fb0a571ca4501d","expires_in":180}]}],"contentMediaType":"application/json"},"examples":{"Result":{"value":{"status":"success","token":"250c68b9c21b78e40e7a3285a2d538d3bc24aabd3b4c76a782fb0a571ca4501d","expires_in":180}}}}}},"404":{"description":"404","headers":{},"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/AuthGenerateAuthToken404Error1"},{"examples":[{"status":"error","message":"Invalid dev-id was provided"}]}],"contentMediaType":"application/json"},"examples":{"Result":{"value":{"status":"error","message":"Invalid dev-id was provided"}}}}}}},"deprecated":false},"parameters":[]},"/users/{user_id}":{"patch":{"tags":["User Management"],"summary":"ModifyUser","description":"Update a Terra user's reference_id or active status","operationId":"ModifyUser","parameters":[{"name":"user_id","in":"path","description":"Terra user ID to update","required":true,"style":"simple","schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"Your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"Your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/UsersRequest"},{}],"contentMediaType":"application/json"}}},"required":false},"responses":{"200":{"description":"Returned upon successful user modification","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UsersResponse"}}}},"400":{"description":"Returned if the parameters are malformed or no user is found","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Users400Error1"}}}}},"deprecated":false},"parameters":[]},"/activity":{"get":{"tags":["Data retrieval"],"summary":"GetActivity","description":"Fetches completed workout sessions, with a defined start and end time and activity type (e.g. running, cycling, etc.)","operationId":"GetActivity","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"with_samples","in":"query","description":"boolean flag specifying whether to include detailed samples in the returned payload","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/ActivityResponse"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"},{"$ref":"#/components/schemas/RequestProcessing"},{"$ref":"#/components/schemas/RateLimitRequestProcessing"},{"$ref":"#/components/schemas/LargeRequestProcessingResponse"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activity400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activity401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activity404Error1"}}}}},"deprecated":false},"post":{"tags":["Data writing"],"summary":"PostActivity","description":"Used to post activity data to a provider. Available for Wahoo","operationId":"PostActivity","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ActivityRequest"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"201":{"description":"Returned when activity was successfully created on the provider","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivityResponse1"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activity400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Activity404Error1"}}}}},"deprecated":false},"parameters":[]},"/athlete":{"get":{"tags":["Data retrieval"],"summary":"GetAthlete","description":"Fetches relevant profile info such as first & last name, birth date etc. for a given user ID","operationId":"GetAthlete","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/AthleteCollection"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Athlete400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Athlete401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Athlete404Error1"}}}}},"deprecated":false},"parameters":[]},"/body":{"get":{"tags":["Data retrieval"],"summary":"GetBody","description":"Fetches body metrics such as weight, height, body fat percentage etc. for a given user ID","operationId":"GetBody","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"with_samples","in":"query","description":"boolean flag specifying whether to include detailed samples in the returned payload","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/BodyResponse"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"},{"$ref":"#/components/schemas/RequestProcessing"},{"$ref":"#/components/schemas/RateLimitRequestProcessing"},{"$ref":"#/components/schemas/LargeRequestProcessingResponse"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body404Error1"}}}}},"deprecated":false},"post":{"tags":["Data writing"],"summary":"PostBody","description":"Used to post body data to a provider. Available for Google Fit","operationId":"PostBody","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BodyRequest"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"201":{"description":"Returned when activity was successfully created on the provider","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BodyResponse1"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body404Error1"}}}}},"deprecated":false},"delete":{"tags":["Data writing"],"summary":"DeleteBody","description":"Used to delete Body metrics the user has registered on their account","operationId":"DeleteBody","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/BodyRequest1"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"200":{"description":"Returned when all records were deleted successfully","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BodyResponse2"}}}},"207":{"description":"Returned when multiple status codes were obtained from attempting to delete the requested records","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BodyResponse3"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body404Error1"}}}}},"deprecated":false},"parameters":[]},"/daily":{"get":{"tags":["Data retrieval"],"summary":"GetDaily","description":"Fetches daily summaries of activity metrics such as steps, distance, calories burned etc. for a given user ID","operationId":"GetDaily","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"with_samples","in":"query","description":"boolean flag specifying whether to include detailed samples in the returned payload","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/DailyResponse"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"},{"$ref":"#/components/schemas/RequestProcessing"},{"$ref":"#/components/schemas/RateLimitRequestProcessing"},{"$ref":"#/components/schemas/LargeRequestProcessingResponse"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Daily400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Daily401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Daily404Error1"}}}}},"deprecated":false},"parameters":[]},"/menstruation":{"get":{"tags":["Data retrieval"],"summary":"GetMenstruation","description":"Fetches menstruation data such as cycle length, period length, ovulation date etc. for a given user ID","operationId":"GetMenstruation","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"with_samples","in":"query","description":"boolean flag specifying whether to include detailed samples in the returned payload","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/MenstruationResponse"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"},{"$ref":"#/components/schemas/RequestProcessing"},{"$ref":"#/components/schemas/RateLimitRequestProcessing"},{"$ref":"#/components/schemas/LargeRequestProcessingResponse"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Menstruation400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Menstruation401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Menstruation404Error1"}}}}},"deprecated":false},"parameters":[]},"/nutrition":{"get":{"tags":["Data retrieval"],"summary":"GetNutrition","description":"Fetches nutrition log data such as meal type, calories, macronutrients etc. for a given user ID","operationId":"GetNutrition","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"with_samples","in":"query","description":"boolean flag specifying whether to include detailed samples in the returned payload","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/NutritionResponse"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"},{"$ref":"#/components/schemas/RequestProcessing"},{"$ref":"#/components/schemas/RateLimitRequestProcessing"},{"$ref":"#/components/schemas/LargeRequestProcessingResponse"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition404Error1"}}}}},"deprecated":false},"post":{"tags":["Data writing"],"summary":"PostNutrition","description":"Used to post nutrition logs to a provider. Available for Fitbit","operationId":"PostNutrition","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/NutritionRequest"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"201":{"description":"Returned when activity was successfully created on the provider","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NutritionResponse1"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition404Error1"}}}}},"deprecated":false},"delete":{"tags":["Data writing"],"summary":"DeleteNutrition","description":"Used to delete nutrition logs the user has registered on their account","operationId":"DeleteNutrition","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/NutritionRequest1"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"200":{"description":"Returned when all records were deleted successfully","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NutritionResponse2"}}}},"207":{"description":"Returned when multiple status codes were obtained from attempting to delete the requested records","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NutritionResponse2"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Nutrition404Error31"}}}}},"deprecated":false},"parameters":[]},"/sleep":{"get":{"tags":["Data retrieval"],"summary":"GetSleep","description":"Fetches sleep data such as sleep duration, sleep stages, sleep quality etc. for a given user ID, for sleep sessions with a defined start and end time","operationId":"GetSleep","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"with_samples","in":"query","description":"boolean flag specifying whether to include detailed samples in the returned payload","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/SleepResponse"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"},{"$ref":"#/components/schemas/RequestProcessing"},{"$ref":"#/components/schemas/RateLimitRequestProcessing"},{"$ref":"#/components/schemas/LargeRequestProcessingResponse"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Sleep400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Sleep401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Sleep404Error1"}}}}},"deprecated":false},"parameters":[]},"/plannedWorkout":{"get":{"tags":["Data retrieval"],"summary":"GetPlannedWorkout","description":"Used to get workout plans the user has registered on their account. This can be stregnth workouts (sets, reps, weight lifted) or cardio workouts (warmup, intervals of different intensities, cooldown etc)","operationId":"GetPlannedWorkout","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"start_date","in":"query","description":"start date of data to query for - either ISO8601 date or unix timestamp","required":true,"style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"end_date","in":"query","description":"end date of data to query for - either ISO8601 date or unix timestamp","style":"form","explode":true,"schema":{"oneOf":[{"type":"integer","contentEncoding":"int32"},{"type":"string","contentEncoding":"date"}]}},{"name":"to_webhook","in":"query","description":"boolean flag specifying whether to send the data retrieved to the webhook, or in the response","style":"form","explode":true,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"Returned upon successful data request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/PlannedWorkoutResponse1"},{"$ref":"#/components/schemas/NoDataReturned"},{"$ref":"#/components/schemas/DataSentToWebhook"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout400Error1"}}}},"401":{"description":"Returned when credentials (dev ID and API key) are invalid","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout401Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout404Error1"}}}}},"deprecated":false},"post":{"tags":["Data writing"],"summary":"PostPlannedWorkout","description":"Used to post workout plans users can follow on their wearable. This can be stregnth workouts (sets, reps, weight lifted) or cardio workouts (warmup, intervals of different intensities, cooldown etc)","operationId":"PostPlannedWorkout","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PlannedWorkoutRequest"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"201":{"description":"Returned when activity was successfully created on the provider","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkoutResponse"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout404Error1"}}}}},"deprecated":false},"delete":{"tags":["Data writing"],"summary":"DeletePlannedWorkout","description":"Used to delete workout plans the user has registered on their account. This can be stregnth workouts (sets, reps, weight lifted) or cardio workouts (warmup, intervals of different intensities, cooldown etc)","operationId":"DeletePlannedWorkout","parameters":[{"name":"user_id","in":"query","description":"user ID to query data for","required":true,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PlannedWorkoutRequest1"},{}],"contentMediaType":"application/json"}}},"required":true},"responses":{"200":{"description":"Returned when all records were deleted successfully","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkoutResponse2"}}}},"207":{"description":"Returned when multiple status codes were obtained from attempting to delete the requested records","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkoutResponse3"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout400Error1"}}}},"401":{"description":"Returned when authorization with a data provider has failed","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout401Error21"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlannedWorkout404Error1"}}}}},"deprecated":false},"parameters":[]},"/userInfo":{"get":{"tags":["User Info"],"summary":"GetUserInfo","description":"Used to query for information on one Terra user ID, or to query for all registered Terra User objects under one reference ID","operationId":"GetUserInfo","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"user_id","in":"query","description":"user ID to query for","style":"form","explode":true,"schema":{"type":"string"}},{"name":"reference_id","in":"query","description":"reference ID to query for","style":"form","explode":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returned when the provided resources are found","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/UserInfoResponse"},{"type":"array","items":{"$ref":"#/components/schemas/User"}}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfo400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInfo404Error1"}}}}},"deprecated":false},"parameters":[]},"/subscriptions":{"get":{"tags":["User Info"],"summary":"GetAllUsers","description":"Used to query for information for all Terra User IDs. Supports optional pagination via `page` and `per_page`. If `page` is not provided, it returns all users in one go (backwards compatibility).","operationId":"GetAllUsers","parameters":[{"name":"dev-id","in":"header","description":"Your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"Your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}},{"name":"page","in":"query","description":"Zero-based page number. If omitted, results are not paginated.","style":"form","explode":true,"schema":{"type":"integer","contentEncoding":"int32","examples":[0]}},{"name":"per_page","in":"query","description":"Number of results per page (default is 500).","style":"form","explode":true,"schema":{"type":"integer","contentEncoding":"int32","examples":[500]}}],"responses":{"200":{"description":"Returned upon a successful request","headers":{},"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/SubscriptionsResponse"},{"$ref":"#/components/schemas/SubscriptionsResponse1"}],"contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters are malformed","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscriptions400Error1"}}}}},"deprecated":false},"parameters":[]},"/bulkUserInfo":{"post":{"tags":["User Info"],"summary":"GetBulkInfo","description":"Used to query for information for multiple Terra User IDs","operationId":"GetBulkInfo","parameters":[{"name":"dev-id","in":"header","description":"your developer ID","required":true,"style":"simple","schema":{"type":"string","examples":["testingTerra"]}},{"name":"x-api-key","in":"header","description":"your API key","required":true,"style":"simple","schema":{"type":"string","examples":["OtHJok60oQmT8zhnUWc4SWBJI7ztPTs88C0gOsJJ"]}}],"requestBody":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"description":"","contentMediaType":"application/json"}}},"required":true},"responses":{"200":{"description":"Returned upon successful request","headers":{},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"List of User objects","contentMediaType":"application/json"}}}},"400":{"description":"Returned when one or more parameters is malformed - an appropriate error message will be returned","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkUserInfo400Error1"}}}},"404":{"description":"Returned when a parameter does not exist on Terra's end (e.g. user_id)","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkUserInfo404Error1"}}}}},"deprecated":false},"parameters":[]},"/integrations":{"get":{"tags":["Integrations"],"summary":"GetIntegrations","description":"","operationId":"GetIntegrations","parameters":[],"responses":{"200":{"description":"Returns list of all available integrations on the API","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IntegrationsResponse1"}}}}},"deprecated":false,"security":[]},"parameters":[]},"/integrations/detailed":{"get":{"tags":["Integrations"],"summary":"Get detailed list of integrations","description":"Retrieve a detailed list of supported integrations, optionally filtered by the developer's enabled integrations and the requirement for SDK usage.","operationId":"Getdetailedlistofintegrations","parameters":[{"name":"sdk","in":"query","description":"If `true`, allows SDK integrations to be included in the response.","style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"dev-id","in":"header","description":"Developer ID to filter the integrations list based on the developer's enabled integrations.","style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Successful response containing a list of integrations.","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IntegrationsResponse"}}}}},"deprecated":false,"security":[]},"parameters":[]}},"components":{"schemas":{"WidgetSessionParams":{"title":"WidgetSessionParams","type":"object","properties":{"providers":{"type":"string","description":"Comma separated list of providers to display on the device selection page. This overrides your selected sources on your dashboard","examples":["GARMIN,FITBIT,OURA,WITHINGS,SUUNTO"]},"language":{"type":"string","description":"Display language of the widget","examples":["en"]},"reference_id":{"type":"string","description":"Identifier of the end user on your system, such as a user ID or email associated with them","examples":["user123@email.com"]},"auth_success_redirect_url":{"type":"string","description":"URL the user is redirected to upon successful authentication","examples":["https://myapp.com/success"]},"auth_failure_redirect_url":{"type":"string","description":"URL the user is redirected to upon unsuccessful authentication","examples":["https://myapp.com/failure"]}}},"User":{"title":"User","type":"object","properties":{"reference_id":{"type":["string","null"],"description":"Connection identifier on the developer's end, used to tie connection back to a user on the developer's platform","examples":["user123@email.com"]},"last_webhook_update":{"type":["string","null"],"description":"Last time at which a webhook update was sent for the connection","contentEncoding":"date-time","examples":["2022-12-12T10:00:00.000000+00:00"]},"scopes":{"type":["string","null"],"description":"(when available) Permissions granted by the user during authentication - to be used as debugging metadata","examples":["activity:read,sleep:read"]},"user_id":{"type":["string","null"],"description":"Terra identifier for the wearable connection","examples":["123e4567-e89b-12d3-a456-426614174000"]},"provider":{"type":["string","null"],"description":"Connection data source","examples":["FITBIT"]},"active":{"type":"string","description":"whether the user is active or not (inactive users will not receive any data updates and are in considered dormant)","examples":["true"]}}},"NoDataReturned":{"title":"NoDataReturned","type":"object","properties":{"status":{"allOf":[{"$ref":"#/components/schemas/Status"},{"examples":["error"]}]},"message":{"type":"string","examples":["No data available for specified time range"]},"type":{"type":["string","null"],"examples":["no_data"]},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]}}},"DataReturned":{"title":"DataReturned","type":"object","properties":{"data":{"type":"array","items":{"type":"object"},"description":"List of objects returned by the API, after normalization"},"type":{"type":["string","null"],"examples":["activity"]},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]}}},"RequestProcessing":{"title":"RequestProcessing","type":"object","properties":{"retry_after_seconds":{"type":["number","null"],"description":"Recommended time after which the request may be retried","examples":[30]},"message":{"type":"string","examples":["Request is being processed"]},"type":{"type":"string","examples":["processing"]},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]}}},"RateLimitRequestProcessing":{"title":"RateLimitRequestProcessing","required":["user"],"type":"object","properties":{"message":{"type":"string","examples":["Rate limit exceeded"]},"type":{"type":"string","examples":["rate_limit"]},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]}}},"DataSentToWebhook":{"title":"DataSentToWebhook","type":"object","properties":{"reference":{"type":["string","null"],"description":"Payload reference, tying the request to the webhook payload which will be received","examples":["webhook_ref_123"]},"message":{"type":"string","examples":["Data will be sent to webhook"]},"type":{"type":"string","examples":["webhook"]},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]}}},"ActivityLevelSample":{"title":"ActivityLevelSample","type":"object","properties":{"activity_level":{"allOf":[{"$ref":"#/components/schemas/ActivityLevel"},{"description":"Intensity of the user's activity at an instant in time","examples":["MEDIUM_INTENSITY"]}]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond prexcision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"ActiveDurationsData":{"title":"ActiveDurationsData","type":"object","properties":{"activity_levels_samples":{"type":"array","items":{"$ref":"#/components/schemas/ActivityLevelSample"},"description":"Array of detailed samples of the intensity the user was in at various points during the workout"},"num_continuous_inactive_periods":{"minimum":0,"type":["integer","null"],"description":"Maximum number of continuous periods spent in an inactive state during the workout","contentEncoding":"int32","examples":[3]},"inactivity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in an inactive state during the workout","examples":[600]},"vigorous_intensity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a state of vigorous intensity during the workout","examples":[300]},"activity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in an active state during the workout","examples":[1800]},"low_intensity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a low intensity state during the workout","examples":[900]},"rest_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent resting during the workout","examples":[120]},"moderate_intensity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a moderate intensity state during the workout","examples":[600]}}},"LapSample":{"title":"LapSample","type":"object","properties":{"calories":{"type":["number","null"],"description":"Calories burned during the lap","examples":[50]},"avg_hr_bpm":{"type":["number","null"],"description":"Average heart rate in bpm, for the Lap sample","examples":[145]},"start_time":{"type":["string","null"],"description":"The start time of the associated lap, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]},"avg_speed_meters_per_second":{"type":["number","null"],"description":"Average speed of the user during the lap","examples":[3.5]},"distance_meters":{"type":["number","null"],"description":"Distance covered during the lap","examples":[400]},"total_strokes":{"type":["number","null"],"description":"Total strokes performed during the lap - only relevant for swimming activities","examples":[20]},"end_time":{"type":["string","null"],"description":"The end time of the associated lap, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-10-28T10:00:00.000000+01:00"]},"stroke_type":{"allOf":[{"$ref":"#/components/schemas/StrokeType"},{"description":"Stroke type - only relevant for swimming activities","examples":["FREESTYLE"]}]}}},"LapData":{"title":"LapData","type":"object","properties":{"laps":{"type":"array","items":{"$ref":"#/components/schemas/LapSample"},"description":"Array of datapoints for each lap performed by the user during the workout"}}},"PolylineMapData":{"title":"PolylineMapData","type":"object","properties":{"summary_polyline":{"type":["string","null"],"description":"The polyline representation of the user's trajectory throughout the workout","examples":["}_p~iF~ps|U_ulLnnqC_mqNvxq`@"]}}},"StrainData":{"title":"StrainData","type":"object","properties":{"strain_level":{"type":["number","null"],"description":"Strain level achieved by the user for the given workout","examples":[8.5]}}},"PositionSample":{"title":"PositionSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[300]},"coords_lat_lng_deg":{"type":"array","items":{"type":"number"},"description":"Position of the user a given point in time, represented by a 2-value array of latitude, longitude, wherein each of the two numbers can be nullable","examples":[[-18.4911,130.9123]]}}},"PositionData":{"title":"PositionData","type":"object","properties":{"position_samples":{"type":"array","items":{"$ref":"#/components/schemas/PositionSample"},"description":"Array of datapoints of the position of the user, sampled throughout the workout"},"end_pos_lat_lng_deg":{"type":"array","items":{"type":"number"},"description":"Position of the user at the end of the workout, represented by a 2-value array of latitude, longitude, wherein each of the two numbers can be nullable","examples":[[-84.4911,-150.9123]]},"center_pos_lat_lng_deg":{"type":"array","items":{"type":"number"},"description":"Position of the user at the midway point of the workout, represented by a 2-value array of latitude, longitude, wherein each of the two numbers can be nullable","examples":[[-18.4911,130.9123]]},"start_pos_lat_lng_deg":{"type":"array","items":{"type":"number"},"description":"Position of the user at the start of the workout, represented by a 2-value array of latitude, longitude, wherein each of the two numbers can be nullable","examples":[[80.2394,102.931]]}}},"CadenceSample":{"title":"CadenceSample","type":"object","properties":{"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[300]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"cadence_rpm":{"type":["number","null"],"description":"Cadence of the user at a given instant in time - only relevant to cycling","examples":[85]}}},"TorqueSample":{"title":"TorqueSample","type":"object","properties":{"torque_newton_meters":{"type":["number","null"],"description":"Torque generated at a given instant in time","examples":[45.5]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[300]}}},"SpeedSample":{"title":"SpeedSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[300]},"speed_meters_per_second":{"type":["number","null"],"description":"User's speed at a given instant in time","examples":[3.5]}}},"MovementData":{"title":"MovementData","type":"object","properties":{"max_pace_minutes_per_kilometer":{"minimum":0,"type":["number","null"],"description":"Maximum pace of the user during the workout","examples":[6.5]},"adjusted_max_speed_meters_per_second":{"minimum":0,"type":["number","null"],"description":"Adjusted max speed of the user during the workout - generated using Terra's algorithms to remove potential affecting the user's actual max speed measurement","examples":[4.2]},"avg_velocity_meters_per_second":{"minimum":0,"type":["number","null"],"description":"Average velocity of the user during the workout - only calculated by certain providers, representing a separate quantity from speed","examples":[3]},"max_velocity_meters_per_second":{"minimum":0,"type":["number","null"],"description":"Maximum velocity of the user during the workout - only calculated by certain providers, representing a separate quantity from speed","examples":[4.5]},"avg_speed_meters_per_second":{"minimum":0,"type":["number","null"],"description":"Average speed of the user during the workout","examples":[3.2]},"avg_torque_newton_meters":{"minimum":0,"type":["number","null"],"description":"Average torque generated by the user during the workout - mainly relevant for cycling activities","examples":[40]},"cadence_samples":{"type":"array","items":{"$ref":"#/components/schemas/CadenceSample"},"description":"Array of cadence values recorded throughout the workout, sampled at intervals determined by the fitness data provider"},"max_speed_meters_per_second":{"minimum":0,"type":["number","null"],"description":"Maximum speed of the user during the workout","examples":[4.5]},"avg_pace_minutes_per_kilometer":{"minimum":0,"type":["number","null"],"description":"Average pace of the user during the workout","examples":[6.2]},"avg_cadence_rpm":{"minimum":0,"type":["number","null"],"description":"Maximum speed of the user during the workout","examples":[85]},"max_torque_newton_meters":{"minimum":0,"type":["number","null"],"description":"Maximum torque generated by the user during the workout - mainly relevant for cycling activities","examples":[55.5]},"torque_samples":{"type":"array","items":{"$ref":"#/components/schemas/TorqueSample"},"description":"Array of the datapoints for the user's torque sampled throughout the workout"},"normalized_speed_meters_per_second":{"minimum":0,"type":["number","null"],"description":"Average normalized speed of the user during the workout - only calculated by certain providers, representing a separate quantity from speed","examples":[3.8]},"max_cadence_rpm":{"minimum":0,"type":["number","null"],"description":"Maximum cadence of the user during the workout - mainly relevant for cycling activities","examples":[110]},"speed_samples":{"type":"array","items":{"$ref":"#/components/schemas/SpeedSample"},"description":"Array of the datapoints for the user's speed sampled throughout the workout"}}},"Vo2MaxSample":{"title":"Vo2MaxSample","type":"object","properties":{"vo2max_ml_per_min_per_kg":{"type":["number","null"],"description":"User's VO2Max - maximum amount of oxygen the user's body can utilize during exercise","examples":[45.5]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"RRIntervalSample":{"title":"RRIntervalSample","type":"object","properties":{"rr_interval_ms":{"type":["number","null"],"description":"User's RR Interval for a specific heart beat in milliseconds","examples":[850]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"hr_bpm":{"type":["number","null"],"description":"The heart beat value at that specific instance","examples":[72]}}},"OxygenSaturationSample":{"title":"OxygenSaturationSample","type":"object","properties":{"percentage":{"type":["number","null"],"description":"User's oxygen saturation percentage - referring to either SpO2 or SmO2, based on the `type` field","examples":[98]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"type":{"oneOf":[{"$ref":"#/components/schemas/Type"},{"$ref":"#/components/schemas/Type1"}],"description":"Type of oxygen saturation measurement (i.e. blood vs muscle)"}}},"OxygenData":{"title":"OxygenData","type":"object","properties":{"vo2max_ml_per_min_per_kg":{"type":["number","null"],"description":"VO2Max for the given user","examples":[42.5]},"avg_saturation_percentage":{"type":["number","null"],"description":"Average Oxygen Saturation percentage of the user during the workout (SpO2 or SmO2)","examples":[97]},"vo2_samples":{"type":"array","items":{"$ref":"#/components/schemas/Vo2MaxSample"},"description":"Array of VO2 datapoints sampled throughout the workout"},"saturation_samples":{"type":"array","items":{"$ref":"#/components/schemas/OxygenSaturationSample"},"description":"Array of Oxygen Saturation percentage datapoints sampled throughout the workout"}}},"OtherDeviceData":{"title":"OtherDeviceData","type":"object","properties":{"manufacturer":{"type":["string","null"],"description":"Device manufacturer name","examples":["Garmin"]},"hardware_version":{"type":["string","null"],"description":"Hardware version of the device","examples":["v2.1"]},"serial_number":{"type":["string","null"],"description":"Device Serial Number","examples":["GR123456789"]},"name":{"type":["string","null"],"description":"Device name - note that this can also be the name of the application/package which the data comes from, if coming from a data aggregator such as Google Fit","examples":["Forerunner 945"]},"software_version":{"type":["string","null"],"description":"Device Software Version","examples":["5.2.1"]}}},"DeviceData":{"title":"DeviceData","type":"object","properties":{"manufacturer":{"type":["string","null"],"description":"Device manufacturer name","examples":["Garmin"]},"hardware_version":{"type":["string","null"],"description":"Hardware version of the device","examples":["v2.1"]},"other_devices":{"type":"array","items":{"$ref":"#/components/schemas/OtherDeviceData"},"description":"Data pertaining to other devices which may have contributed data for this workout"},"activation_timestamp":{"type":["string","null"],"description":"Activation timestamp of the device, if applicable","contentEncoding":"date-time","examples":["2022-12-25T00:00:00.000000+05:00"]},"serial_number":{"type":["string","null"],"description":"Device Serial Number","examples":["GR123456789"]},"name":{"type":["string","null"],"description":"Device name - note that this can also be the name of the application/package which the data comes from, if coming from a data aggregator such as Google Fit","examples":["Forerunner 945"]},"software_version":{"type":["string","null"],"description":"Device Software Version","examples":["5.2.1"]}}},"EnergyData":{"title":"EnergyData","type":"object","properties":{"energy_planned_kilojoules":{"type":["number","null"],"description":"Total number of kiloJoules planned to be expended during the workout - represents the user's predefined goal for the workout","examples":[1200]},"energy_kilojoules":{"type":["number","null"],"description":"Total number of kiloJoules expended during the workout","examples":[1150]}}},"METSample":{"title":"METSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"level":{"type":["number","null"],"description":"Metabolic Equivalent of Task of the user's activity level at an instant in time","examples":[4.2]}}},"METData":{"title":"METData","type":"object","properties":{"num_inactive_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in state of Inactivity during the workout - based off MET scale","examples":[5]},"MET_samples":{"type":"array","items":{"$ref":"#/components/schemas/METSample"},"description":"An array of Metabolic Equivalent Time samples, as calculated by the user's wearable"},"num_low_intensity_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in Low Intensity during the workout - based off MET scale","examples":[15]},"num_moderate_intensity_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in Moderate Intensity during the workout - based off MET scale","examples":[25]},"avg_level":{"type":["number","null"],"description":"The average MET level of the activity","examples":[3.8]},"num_high_intensity_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in High Intensity during the workout - based off MET scale","examples":[10]}}},"PowerSample":{"title":"PowerSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[1800]},"watts":{"type":["number","null"],"description":"Power generated at a given instant in time","examples":[250]}}},"PowerData":{"title":"PowerData","type":"object","properties":{"avg_watts":{"minimum":0,"type":["number","null"],"description":"Average power output of the user during the workout","examples":[185]},"max_watts":{"minimum":0,"type":["number","null"],"description":"Maximum power output of the user during the workout","examples":[350]},"power_samples":{"type":"array","items":{"$ref":"#/components/schemas/PowerSample"},"description":"Array containing datapoints of the power output of the user sampled throughout the workout"}}},"ElevationSummary":{"title":"ElevationSummary","type":"object","properties":{"gain_planned_meters":{"minimum":0,"type":["number","null"],"description":"Elevation gain of the user throughout the workout - this includes all elevation gain, and does _not_ represent net gain","examples":[500]},"loss_actual_meters":{"minimum":0,"type":["number","null"],"description":"Elevation loss of the user throughout the workout","examples":[450]},"max_meters":{"type":["number","null"],"description":"Maximum elevation of the user during the workout","examples":[1200]},"min_meters":{"type":["number","null"],"description":"Minimum elevation of the user during the workout","examples":[800]},"gain_actual_meters":{"minimum":0,"type":["number","null"],"description":"Planned elevation gain for the workout","examples":[550]},"avg_meters":{"type":["number","null"],"description":"Average elevation of the user throughout the workout","examples":[950]}}},"SwimmingSummary":{"title":"SwimmingSummary","type":"object","properties":{"num_laps":{"minimum":0,"type":["integer","null"],"description":"Total number of swimming laps performed during the workout","contentEncoding":"int32","examples":[20]},"num_strokes":{"minimum":0,"type":["integer","null"],"description":"Total number of swimming strokes performed during the workout","contentEncoding":"int32","examples":[500]},"pool_length_meters":{"minimum":0,"type":["integer","null"],"description":"Pool length for associated with the workout","contentEncoding":"int32","examples":[25]}}},"DistanceDataSummary":{"title":"DistanceDataSummary","type":"object","properties":{"distance_meters":{"type":["number","null"],"description":"Total distance covered by the user throughout the workout","examples":[5000]},"elevation":{"allOf":[{"$ref":"#/components/schemas/ElevationSummary"},{"description":"Average elevation of the user throughout the workout"}]},"steps":{"type":["integer","null"],"description":"Total number of steps performed during the workout","contentEncoding":"int32","examples":[6500]},"floors_climbed":{"minimum":0,"type":["integer","null"],"description":"Total number of elevation gain in floors climbed equivalent throughout the workout, as determined by the fitness data provider","contentEncoding":"int32","examples":[10]},"swimming":{"allOf":[{"$ref":"#/components/schemas/SwimmingSummary"},{"description":"Summary information of the user's swimming statistics for the workout, if applicable"}]}}},"ElevationSample":{"title":"ElevationSample","type":"object","properties":{"elev_meters":{"type":["number","null"],"description":"User's altitude at a given point in time","examples":[925]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[1200]}}},"DistanceSample":{"title":"DistanceSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"distance_meters":{"type":["number","null"],"description":"Cumulative distance covered up to associated timestamp, since the start of the payload","examples":[2500]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[900]}}},"FloorsClimbedSample":{"title":"FloorsClimbedSample","type":"object","properties":{"floors_climbed":{"type":["number","null"],"description":"Cumulative number of elevation gain measured in floors climbed up to associated timestamp, since the start of the payload","examples":[5]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[600]}}},"StepSample":{"title":"StepSample","type":"object","properties":{"steps":{"type":["number","null"],"description":"Cumulative steps performed up to associated timestamp, since the start of the payload","examples":[3250]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[900]}}},"DistanceDataDetailed":{"title":"DistanceDataDetailed","type":"object","properties":{"elevation_samples":{"type":"array","items":{"$ref":"#/components/schemas/ElevationSample"},"description":"Array of detailed samples of elevation throughout the workout"},"distance_samples":{"type":"array","items":{"$ref":"#/components/schemas/DistanceSample"},"description":"Array of detailed samples of distance covered throughout the workout"},"floors_climbed_samples":{"type":"array","items":{"$ref":"#/components/schemas/FloorsClimbedSample"},"description":"Array of detailed samples of floors climbed throughout the workout, as determined by the fitness data provider"},"step_samples":{"type":"array","items":{"$ref":"#/components/schemas/StepSample"},"description":"Array of detailed samples of steps performed throughout the workout"}}},"DistanceData":{"title":"DistanceData","type":"object","properties":{"summary":{"allOf":[{"$ref":"#/components/schemas/DistanceDataSummary"},{"description":"Object containing summary information related to distance covered throughout the workout"}]},"detailed":{"allOf":[{"$ref":"#/components/schemas/DistanceDataDetailed"},{"description":"Object containing detailed distance information - this may included second-by-second samples"}]}}},"HeartRateZone":{"title":"HeartRateZone","type":"object","properties":{"zone":{"allOf":[{"$ref":"#/components/schemas/Zone"},{"examples":["ZONE_2"]}]},"start_percentage":{"maximum":100,"minimum":0,"type":["number","null"],"description":"Start percentage (based off user's max HR) of the HR zone","examples":[60]},"end_percentage":{"maximum":100,"minimum":0,"type":["number","null"],"description":"End percentage (based off user's max HR) of the HR zone","examples":[70]},"duration_seconds":{"type":["number","null"],"description":"Duration spent in the hart rate zone","examples":[300]},"name":{"type":["string","null"],"description":"Name of the associated heart rate zone","examples":["Aerobic"]}}},"HeartRateDataSummary":{"title":"HeartRateDataSummary","type":"object","properties":{"resting_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Resting HeartRate of the user, as determined by the fitness data provider","examples":[65]},"avg_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Average HeartRate of the user during the workout","examples":[145]},"max_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Maximum HeartRate of the user during the workout","examples":[180]},"avg_hrv_sdnn":{"type":["number","null"],"description":"Average HeartRate Variability of the user during the workout, computed using SDNN","examples":[45.5]},"hr_zone_data":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateZone"},"description":"Array of time spent in various HR zones throughout the workout"},"min_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Minimum HeartRate of the user during the workout","examples":[85]},"avg_hrv_rmssd":{"type":["number","null"],"description":"Average HeartRate Variability of the user during the workout, computed using RMSSD","examples":[35.2]},"user_max_hr_bpm":{"type":["number","null"],"description":"User's maximum HeartRate based on their age, and other factors as determined by the fitness data provider","examples":[190]}}},"HeartRateVariabilityDataSampleRMSSD":{"title":"HeartRateVariabilityDataSampleRMSSD","type":"object","properties":{"hrv_rmssd":{"type":["number","null"],"description":"User's Heart Rate Variability, computed using RMSSD","examples":[42.1]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"HeartRateDataSample":{"title":"HeartRateDataSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"bpm":{"type":["number","null"],"description":"User's heart rate in bpm","examples":[142]}}},"HeartRateVariabilityDataSampleSDNN":{"title":"HeartRateVariabilityDataSampleSDNN","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"hrv_sdnn":{"type":["number","null"],"description":"User's Heart Rate Variability, computed using SDNN","examples":[48.3]}}},"HeartRateDataDetailed":{"title":"HeartRateDataDetailed","type":"object","properties":{"hrv_samples_rmssd":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateVariabilityDataSampleRMSSD"},"description":"Array of HeartRate Variability data samples recorded for the user during the workout, computed using RMSSD"},"hr_samples":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateDataSample"},"description":"Array of HeartRate data samples recorded for the user during the workout"},"hrv_samples_sdnn":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateVariabilityDataSampleSDNN"},"description":"Array of HeartRate Variability data samples recorded for the user during the workout, computed using SDNN"}}},"HeartRateData":{"title":"HeartRateData","type":"object","properties":{"summary":{"allOf":[{"$ref":"#/components/schemas/HeartRateDataSummary"},{"description":"Object containing summary heart rate information for the associated workout"}]},"detailed":{"allOf":[{"$ref":"#/components/schemas/HeartRateDataDetailed"},{"description":"Object containing detailed heart rate information for the associated workout"}]}}},"TSSSample":{"title":"TSSSample","type":"object","properties":{"intensity_factor_planned":{"type":["number","null"],"description":"Planned","examples":[0.85]},"intensity_factor_actual":{"type":["number","null"],"description":"Ratio of Normalized Power to Functional Threshold Power (FTP). IF takes into account differences in fitness within or between individuals","examples":[0.82]},"normalized_power_watts":{"type":["number","null"],"description":"Adjusted Power calculated using an algorithm that into account the variance between a steady workout and a fluctuating workout. It measures the true physiological demands of a training session. It considers both rapid changes in intensity, as well as critical responses in the body associated with those changes.","examples":[225]},"planned":{"type":["number","null"],"description":"Planned Training Stress Score (TSS)","examples":[85]},"actual":{"type":["number","null"],"description":"Achieved Training Stress Score (TSS)","examples":[82]},"method":{"type":["string","null"],"description":"Method of measurement of the Training Stress Score","examples":["HeartRate"]}}},"TSSData":{"title":"TSSData","type":"object","properties":{"TSS_samples":{"type":"array","items":{"$ref":"#/components/schemas/TSSSample"},"description":"Array of TSS information sampled throughout the workout"}}},"CalorieSample":{"title":"CalorieSample","type":"object","properties":{"calories":{"type":["number","null"],"description":"Cumulative calories burned up to associated timestamp, since the start of the payload","examples":[450]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"timer_duration_seconds":{"type":["number","null"],"description":"Time elapsed since the start of the workout, subtracting time during which the recording was paused","examples":[1800]}}},"CaloriesData":{"title":"CaloriesData","type":"object","properties":{"BMR_calories":{"minimum":0,"type":["number","null"],"description":"BMR of the user on the specific day, which contributes to the total calories burned during the workout","examples":[1800]},"net_activity_calories":{"minimum":0,"type":["number","null"],"description":"Net calorie burn coming just from the workout itself, excluding BMR","examples":[450]},"total_burned_calories":{"minimum":0,"type":["number","null"],"description":"Total number of calories burned during the workout, including BMR","examples":[2250]},"net_intake_calories":{"minimum":0,"type":["number","null"],"description":"Net intake of calories during the period of the workout","examples":[200]},"calorie_samples":{"type":"array","items":{"$ref":"#/components/schemas/CalorieSample"},"description":"Detailed samples of cumulative calories burned at various timestamps over the period of the workout"}}},"ActivityMetadata":{"title":"ActivityMetadata","type":"object","properties":{"state":{"type":["string","null"],"description":"The State in which the workout was performed","examples":["California"]},"timestamp_localization":{"oneOf":[{"$ref":"#/components/schemas/TimestampLocalization"},{"$ref":"#/components/schemas/TimestampLocalization1"}],"description":"Indicates whether the timestamps in this payload are localized (LOCAL) or in UTC","examples":[0]},"country":{"type":["string","null"],"description":"The Country in which the workout was performed","examples":["United States"]},"start_time":{"type":["string","null"],"description":"The start time of the associated workout, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]},"summary_id":{"type":["string","null"],"description":"A unique identifier for the workout - note that this is unique for the given user, and may not be globally unique","examples":["123e4567-e89b-12d3-a456-426614174000"]},"city":{"type":["string","null"],"description":"The City in which the workout was performed","examples":["San Francisco"]},"type":{"allOf":[{"$ref":"#/components/schemas/Type2"},{"description":"The type of activity performed for the associated workout","examples":["RUNNING"]}]},"end_time":{"type":["string","null"],"description":"The end time of the associated workout, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-10-28T10:00:00.000000+01:00"]},"name":{"type":["string","null"],"description":"The name - either user-entered or given by the fitness data provider - of the associated workout","examples":["Morning Run"]},"upload_type":{"allOf":[{"$ref":"#/components/schemas/UploadType"},{"description":"The upload type for the associated workout, providing information on whether this was an automatic workout or user-entered"}]}}},"WorkData":{"title":"WorkData","type":"object","properties":{"work_kilojoules":{"type":["number","null"],"description":"Total work output of the user for the workout","examples":[450.5]}}},"Activity":{"title":"Activity","type":"object","properties":{"active_durations_data":{"allOf":[{"$ref":"#/components/schemas/ActiveDurationsData"},{"description":"Number of minutes spent at various intensities during the workout, as reported by the Fitness Data provider"}]},"lap_data":{"allOf":[{"$ref":"#/components/schemas/LapData"},{"description":"Object containing information on data for each lap performed by the user - mostly relates to track & field running activities, and swimming activities"}]},"cheat_detection":{"type":["number","null"],"description":"Cheat detection flag","examples":[0]},"polyline_map_data":{"allOf":[{"$ref":"#/components/schemas/PolylineMapData"},{"description":"Object containing polyline-representation map data, plotting the user's trajectory throughout the workout"}]},"strain_data":{"allOf":[{"$ref":"#/components/schemas/StrainData"},{"description":"Object containing information on the cardiovascular strain imposed on the user during the workout"}]},"position_data":{"allOf":[{"$ref":"#/components/schemas/PositionData"},{"description":"Object containing information on the user's position throughout the workout"}]},"movement_data":{"allOf":[{"$ref":"#/components/schemas/MovementData"},{"description":"Object containing information on the user's movement throughout the workout"}]},"oxygen_data":{"allOf":[{"$ref":"#/components/schemas/OxygenData"},{"description":"Object containing information on oxygen-related metrics for the workout"}]},"device_data":{"allOf":[{"$ref":"#/components/schemas/DeviceData"},{"description":"Object containing information on the device which recorded the specific workout"}]},"energy_data":{"allOf":[{"$ref":"#/components/schemas/EnergyData"},{"description":"Object containing information on the energy expended by the user during the workout"}]},"MET_data":{"allOf":[{"$ref":"#/components/schemas/METData"},{"description":"Object containing information on the Metabolic Equivalent of Task for the workout"}]},"power_data":{"allOf":[{"$ref":"#/components/schemas/PowerData"},{"description":"Object containing information on the power generated by the user during the workout"}]},"distance_data":{"allOf":[{"$ref":"#/components/schemas/DistanceData"},{"description":"Object containing information related to distance covered during the associated workout"}]},"heart_rate_data":{"allOf":[{"$ref":"#/components/schemas/HeartRateData"},{"description":"Object containing heartrate-related information for the workout"}]},"TSS_data":{"allOf":[{"$ref":"#/components/schemas/TSSData"},{"description":"Object containing information on the stress put on the user's body from a workout"}]},"calories_data":{"allOf":[{"$ref":"#/components/schemas/CaloriesData"},{"description":"Object containing calorie-related information for the user during the specific workout"}]},"metadata":{"allOf":[{"$ref":"#/components/schemas/ActivityMetadata"},{"description":"Object containing workout metadata"}]},"work_data":{"allOf":[{"$ref":"#/components/schemas/WorkData"},{"description":"Object containing information on the work output of the user during the workout"}]}}},"ActivitySample":{"title":"ActivitySample","type":"object","properties":{"swimming_strokes":{"type":["integer","null"],"contentEncoding":"int32","examples":[25]},"calories":{"type":["number","null"],"examples":[150.5]},"spo2_percentage":{"type":["number","null"],"examples":[98.5]},"vo2_max_volume_ml_per_min_per_kg":{"type":["number","null"],"examples":[45.2]},"rep_count":{"type":["integer","null"],"contentEncoding":"int32","examples":[12]},"vo2_volume_ml_per_min_per_kg":{"type":["number","null"],"examples":[42.8]},"speed_in_meters_per_seconds":{"type":["number","null"],"examples":[3.5]},"active_duration_seconds":{"type":["integer","null"],"contentEncoding":"int32","examples":[3600]},"heartrate_bpm":{"type":["number","null"],"examples":[145]},"swimming_laps":{"type":["number","null"],"examples":[10]},"altitude_in_meters":{"type":["number","null"],"examples":[250.5]},"status":{"type":["string","null"],"examples":["active"]},"distance_in_km":{"type":["number","null"],"examples":[5.2]},"timestamp":{"type":["string","null"],"examples":["2023-08-15T14:30:00.000000+00:00"]},"resting_duration_seconds":{"type":["integer","null"],"contentEncoding":"int32","examples":[300]},"coordinates_lat_lng":{"type":"array","items":{"type":"number"},"description":""}}},"Athlete":{"title":"Athlete","type":"object","properties":{"gender":{"type":["string","null"],"description":"User's gender","examples":["male"]},"state":{"type":["string","null"],"description":"User's state of residence","examples":["California"]},"bio":{"type":["string","null"],"description":"User's bio - a short description they display on their profile","examples":["Passionate runner and cyclist"]},"age":{"type":["string","null"],"description":"User's age","examples":["28"]},"country":{"type":["string","null"],"description":"User's country of residence","examples":["United States"]},"sex":{"type":["string","null"],"description":"User's sex","examples":["male"]},"date_of_birth":{"type":["string","null"],"description":"User's date of birth, in ISO8601 format","contentEncoding":"date","examples":["1999-11-23"]},"city":{"type":["string","null"],"description":"User's city of residence","examples":["San Francisco"]},"account_creation_date":{"type":["string","null"],"description":"User's account creation date","examples":["2023-01-15"]},"email":{"type":["string","null"],"description":"User's email","examples":["user@example.com"]},"last_name":{"type":["string","null"],"description":"User's last name","examples":["Smith"]},"first_name":{"type":["string","null"],"description":"User's first name","examples":["John"]}}},"AthleteCollection":{"title":"AthleteCollection","type":"object","properties":{"athlete":{"allOf":[{"$ref":"#/components/schemas/Athlete"},{"description":"Object containing the user's information"}]},"type":{"type":["string","null"],"examples":["athlete"]},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]}}},"MeasurementDataSample":{"title":"MeasurementDataSample","type":"object","properties":{"weight_kg":{"type":["number","null"],"description":"User's body weight","examples":[75.5]},"bodyfat_percentage":{"maximum":100,"minimum":0,"type":["number","null"],"description":"User's body far percentage","examples":[18.5]},"BMI":{"type":["number","null"],"description":"User's Body Mass Index (BMI)","examples":[22.4]},"water_percentage":{"maximum":100,"minimum":0,"type":["number","null"],"description":"Total amount of fluid in the user's body","examples":[60.5]},"measurement_time":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"lean_mass_g":{"type":["number","null"],"description":"Total lean mass of the user - calculated as the difference between total body weight and body fat weight","examples":[61500]},"estimated_fitness_age":{"type":["string","null"],"description":"Estimate of how fit the user is compared to their actual age, as measured by the device","examples":["25"]},"skin_fold_mm":{"type":["number","null"],"description":"User's skin fold measurement","examples":[12.5]},"height_cm":{"type":["number","null"],"description":"User's height","examples":[178]},"bone_mass_g":{"type":["number","null"],"description":"User's total bone mass","examples":[3200]},"insulin_units":{"type":["number","null"],"description":"Quantity of insulin administered to the user","examples":[10.5]},"muscle_mass_g":{"type":["number","null"],"description":"User's total muscle mass (i.e. skeletal muscle mass)","examples":[35000]},"BMR":{"type":["number","null"],"description":"User's Basal Metabolic Rate - minimum amount of calories that a person's body needs to perform necessary functions","examples":[1800]},"urine_color":{"type":["string","null"],"description":"Color of the user's urine","examples":["pale yellow"]},"RMR":{"type":["number","null"],"description":"User's Resting Metabolic Rate - amount of energy that a person's body needs to function while at rest. RMR accounts for additional low-effort daily activities on top of basic body functions","examples":[2000]},"insulin_type":{"type":["string","null"],"description":"Type of insulin administered to the user","examples":["rapid-acting"]}}},"MeasurementsData":{"title":"MeasurementsData","type":"object","properties":{"measurements":{"type":"array","items":{"$ref":"#/components/schemas/MeasurementDataSample"},"description":"List of body metrics & measurements taken throughout the associated day"}}},"KetoneDataSample":{"title":"KetoneDataSample","type":"object","properties":{"ketone_mg_per_dL":{"type":["number","null"],"description":"Ketone in mg per dL","examples":[1.5]},"sample_type":{"allOf":[{"$ref":"#/components/schemas/SampleType"},{"description":"Flag indicating the ketone sample type (e.g. blood, breath, urine)"}]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"KetoneData":{"title":"KetoneData","type":"object","properties":{"ketone_samples":{"type":"array","items":{"$ref":"#/components/schemas/KetoneDataSample"},"description":"List of ketone data sampled through the day."}}},"HydrationData":{"title":"HydrationData","type":"object","properties":{"hydration_amount_samples":{"type":["number","null"],"description":"User's body water content","examples":[65.5]},"day_total_water_consumption_ml":{"type":["number","null"],"description":"User's total water consumption throughout the day","examples":[2500]}}},"DailyHeartRateDataSummary":{"title":"DailyHeartRateDataSummary","type":"object","properties":{"resting_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Resting HeartRate of the user, as determined by the fitness data provider","examples":[60]},"avg_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Average HeartRate of the user during the day","examples":[75]},"max_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Maximum HeartRate of the user during the day","examples":[180]},"avg_hrv_sdnn":{"type":["number","null"],"description":"Average HeartRate Variability of the user during the day, computed using SDNN","examples":[45.5]},"hr_zone_data":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateZone"},"description":"Array of time spent in various HR zones throughout the day"},"min_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Minimum HeartRate of the user during the day","examples":[45]},"avg_hrv_rmssd":{"type":["number","null"],"description":"Average HeartRate Variability of the user during the day, computed using RMSSD","examples":[42.8]},"user_max_hr_bpm":{"type":["number","null"],"description":"User's maximum HeartRate based on their age, and other factors as determined by the fitness data provider","examples":[190]}}},"DailyHeartRateDataDetailed":{"title":"DailyHeartRateDataDetailed","type":"object","properties":{"hrv_samples_rmssd":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateVariabilityDataSampleRMSSD"},"description":"Array of HeartRate Variability data samples recorded for the user during the day, computed using RMSSD"},"hr_samples":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateDataSample"},"description":"Array of HeartRate data samples recorded for the user during the day"},"hrv_samples_sdnn":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateVariabilityDataSampleSDNN"},"description":"Array of HeartRate Variability data samples recorded for the user during the day, computed using SDNN"}}},"DailyHeartRateData":{"title":"DailyHeartRateData","type":"object","properties":{"summary":{"allOf":[{"$ref":"#/components/schemas/DailyHeartRateDataSummary"},{"description":"Object containing summary information for the associated day"}]},"detailed":{"allOf":[{"$ref":"#/components/schemas/DailyHeartRateDataDetailed"},{"description":"Object containing detailed heart rate information for the associated day"}]}}},"PulseVelocitySample":{"title":"PulseVelocitySample","type":"object","properties":{"pulse_wave_velocity_meters_per_second":{"type":["number","null"],"description":"User's Pulse Wave Velocity measurement -  velocity at which the blood pressure pulse propagates through the circulatory system","examples":[7.2]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"AFibClassificationSample":{"title":"AFibClassificationSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"afib_classification":{"type":["string","null"],"description":"Flag indicating the atrial fibrillation classification of the individual","examples":["NORMAL"]}}},"RawECGSample":{"title":"RawECGSample","type":"object","properties":{"potential_uV":{"type":["number","null"],"description":"Potential uV in the RawECG Sample","examples":[1250.5]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"ECGReading":{"title":"ECGReading","type":"object","properties":{"start_timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"avg_hr_bpm":{"type":["number","null"],"description":"User's average heart rate throughout the day","examples":[72.5]},"afib_classfication":{"type":["integer","null"],"description":"User's afib classification throught the day","contentEncoding":"int32","examples":[1]},"raw_signal":{"type":"array","items":{"$ref":"#/components/schemas/RawECGSample"},"description":"List of raw ECG readings sampled through the day."}}},"BodyHeartData":{"title":"BodyHeartData","type":"object","properties":{"heart_rate_data":{"allOf":[{"$ref":"#/components/schemas/DailyHeartRateData"},{}]},"pulse_wave_velocity_samples":{"type":"array","items":{"$ref":"#/components/schemas/PulseVelocitySample"},"description":"List of Pulse Wave Velocity measurements sampled throughout the day. This represents a measurement of arterial stiffness that is an independent predictor of cardiovascular risk"},"afib_classification_samples":{"type":"array","items":{"$ref":"#/components/schemas/AFibClassificationSample"},"description":"List of Atrial Fibrillation classification measurements sampled through the day."},"ecg_signal":{"type":"array","items":{"$ref":"#/components/schemas/ECGReading"},"description":"List of ECGReadings sampled through the day."},"rr_interval_samples":{"type":"array","items":{"$ref":"#/components/schemas/RRIntervalSample"},"description":"List of RR Interval samples throughout the day"}}},"GlucoseDataSample":{"title":"GlucoseDataSample","type":"object","properties":{"glucose_level_flag":{"allOf":[{"$ref":"#/components/schemas/GlucoseLevelFlag"},{"description":"Flag indicating state of user's blood glucose level","examples":["NORMAL"]}]},"trend_arrow":{"allOf":[{"$ref":"#/components/schemas/TrendArrow"},{"description":"Flag indicating the current trend in the user's blood glucose level (e.g. rising, constant, falling)","examples":["FLAT"]}]},"blood_glucose_mg_per_dL":{"type":["integer","null"],"description":"User's blood glucose reading","contentEncoding":"int32","examples":[95]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"GlucoseData":{"title":"GlucoseData","type":"object","properties":{"detailed_blood_glucose_samples":{"type":"array","items":{"$ref":"#/components/schemas/GlucoseDataSample"},"description":"List of blood glucose readings sampled throughout the day - this represents additional data points, potentially at higher frequency from the ones in blood_glucose_samples, which may come at a cost of reduced accuracy"},"blood_glucose_samples":{"type":"array","items":{"$ref":"#/components/schemas/GlucoseDataSample"},"description":"List of blood glucose readings sampled throughout the day"},"day_avg_blood_glucose_mg_per_dL":{"type":["number","null"],"description":"User's average glucose level throughout the day","examples":[92.5]}}},"BodyMetadata":{"title":"BodyMetadata","type":"object","properties":{"start_time":{"type":["string","null"],"description":"The start time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]},"end_time":{"type":["string","null"],"description":"The end time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h after start_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-10-28T10:00:00.000000+01:00"]},"timestamp_localization":{"oneOf":[{"$ref":"#/components/schemas/TimestampLocalization"},{"$ref":"#/components/schemas/TimestampLocalization1"}],"description":"Indicates whether the timestamps in this payload are localized (LOCAL) or in UTC","examples":[0]}}},"BloodPressureSample":{"title":"BloodPressureSample","type":"object","properties":{"diastolic_bp":{"type":["number","null"],"description":"User's diastolic blood pressure, in mmHg","examples":[80.5]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"systolic_bp":{"type":["number","null"],"description":"User's systolic blood pressure, in mmHg","examples":[120.5]}}},"BloodPressureData":{"title":"BloodPressureData","type":"object","properties":{"blood_pressure_samples":{"type":"array","items":{"$ref":"#/components/schemas/BloodPressureSample"},"description":"List of Blood Pressure measurements sampled throughout the day"}}},"TemperatureSample":{"title":"TemperatureSample","type":"object","properties":{"temperature_celsius":{"type":["number","null"],"examples":[37.2]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"TemperatureData":{"title":"TemperatureData","type":"object","properties":{"body_temperature_samples":{"type":"array","items":{"$ref":"#/components/schemas/TemperatureSample"},"description":"List of body temperature measurements sampled throughout the day"},"skin_temperature_samples":{"type":"array","items":{"$ref":"#/components/schemas/TemperatureSample"},"description":"List of skin temperature measurements sampled throughout the day"},"ambient_temperature_samples":{"type":"array","items":{"$ref":"#/components/schemas/TemperatureSample"},"description":"List of ambient temperature measurements sampled throughout the day"}}},"Body":{"title":"Body","type":"object","properties":{"measurements_data":{"allOf":[{"$ref":"#/components/schemas/MeasurementsData"},{"description":"Object containing information on body measurements for the day"}]},"ketone_data":{"allOf":[{"$ref":"#/components/schemas/KetoneData"},{"description":"Object containing information on user's ketone data for the day"}]},"hydration_data":{"allOf":[{"$ref":"#/components/schemas/HydrationData"},{"description":"Object containing information on user's hydration (both internal & consumption of water) for the day"}]},"device_data":{"allOf":[{"$ref":"#/components/schemas/DeviceData"},{"description":"Object containing information on the device which recorded data for the payload"}]},"heart_data":{"allOf":[{"$ref":"#/components/schemas/BodyHeartData"},{"description":"Object containing information on user's heart metrics"}]},"oxygen_data":{"allOf":[{"$ref":"#/components/schemas/OxygenData"},{"description":"Object containing information on user's oxygen-related data"}]},"glucose_data":{"allOf":[{"$ref":"#/components/schemas/GlucoseData"},{"description":"Object containing information on user's blood glucose for the day"}]},"metadata":{"allOf":[{"$ref":"#/components/schemas/BodyMetadata"},{"description":"Object containing daily summary metadata"}]},"blood_pressure_data":{"allOf":[{"$ref":"#/components/schemas/BloodPressureData"},{"description":"Object containing information on user's Blood Pressure"}]},"temperature_data":{"allOf":[{"$ref":"#/components/schemas/TemperatureData"},{"description":"Object containing temperature information (core, skin, ambient) during the day"}]}}},"DailyActiveDurationsData":{"title":"DailyActiveDurationsData","type":"object","properties":{"activity_levels_samples":{"type":"array","items":{"$ref":"#/components/schemas/ActivityLevelSample"},"description":"Array of detailed samples of the intensity the user was in at various points during the day"},"num_continuous_inactive_periods":{"minimum":0,"type":["integer","null"],"description":"Maximum number of continuous periods spent in an inactive state during the day","contentEncoding":"int32","examples":[3]},"inactivity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in an inactive state during the day","examples":[28800]},"vigorous_intensity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a state of vigorous intensity during the day","examples":[1800]},"activity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in an active state during the day","examples":[14400]},"low_intensity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a low intensity state during the day","examples":[7200]},"rest_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent resting during the day","examples":[28800]},"moderate_intensity_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a moderate intensity state during the day","examples":[5400]}}},"Scores":{"title":"Scores","type":"object","properties":{"sleep":{"maximum":100,"minimum":0,"type":["number","null"],"description":"Sleep score for the given day, pertaining to the previous night's sleep","examples":[85]},"recovery":{"maximum":100,"minimum":0,"type":["number","null"],"description":"Recovery score for the given day","examples":[78]},"activity":{"maximum":100,"minimum":0,"type":["number","null"],"description":"Activity score for the given day","examples":[92]}}},"DailyStrainData":{"title":"DailyStrainData","type":"object","properties":{"strain_level":{"type":["number","null"],"description":"Object containing information on the cardiovascular strain imposed on the user during the day.","examples":[14.5]}}},"StressData":{"title":"StressData","type":"object","properties":{"avg_stress_level":{"type":["number","null"],"description":"Average stress level for the day","examples":[45.5]},"activity_stress_duration_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a stressed state while active during the day","examples":[3600]},"low_stress_duration_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a state of low stress during the day","examples":[28800]},"max_stress_level":{"type":["number","null"],"description":"Maximum stress level recorded during the day","examples":[85]},"medium_stress_duration_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a state of medium stress during the day","examples":[7200]},"samples":{"type":"array","items":{"$ref":"#/components/schemas/StepSample"},"description":"Array of stress level data points sampled throughout the day"},"rest_stress_duration_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a stressed state while at rest during the day","examples":[1800]},"high_stress_duration_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a state of high stress during the day","examples":[900]},"stress_duration_seconds":{"minimum":0,"type":["number","null"],"description":"Total number of seconds spent in a stressed state while at rest during the day","examples":[5400]}}},"TagEntry":{"title":"TagEntry","type":"object","properties":{"notes":{"type":["string","null"],"description":"User-input notes associated with the given tag","examples":["Felt refreshed after"]},"tag_name":{"type":["string","null"],"description":"Tag name, representing a certain event associated with the user's day","examples":["hot_shower"]},"timestamp":{"type":["string","null"],"description":"Time with which the tag is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]}}},"TagData":{"title":"TagData","type":"object","properties":{"tags":{"type":"array","items":{"$ref":"#/components/schemas/TagEntry"},"description":"Array of user-entered tags for the day"}}},"DailyMETData":{"title":"DailyMETData","type":"object","properties":{"num_inactive_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in state of Inactivity during the day - based off MET scale","examples":[480]},"MET_samples":{"type":"array","items":{"$ref":"#/components/schemas/METSample"},"description":"An array of Metabolic Equivalent Time samples, as calculated by the user's wearable"},"num_low_intensity_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in Low Intensity during the day - based off MET scale","examples":[720]},"num_moderate_intensity_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in Moderate Intensity during the day - based off MET scale","examples":[180]},"avg_level":{"type":["number","null"],"description":"The average MET level of the activity","examples":[1.8]},"num_high_intensity_minutes":{"minimum":0,"type":["number","null"],"description":"Number of minutes spent in High Intensity during the day - based off MET scale","examples":[60]}}},"DailyDistanceDataDetailed":{"title":"DailyDistanceDataDetailed","type":"object","properties":{"elevation_samples":{"type":"array","items":{"$ref":"#/components/schemas/ElevationSample"},"description":"Array of detailed samples of elevation throughout the day"},"distance_samples":{"type":"array","items":{"$ref":"#/components/schemas/DistanceSample"},"description":"Array of detailed samples of distance covered throughout the day"},"floors_climbed_samples":{"type":"array","items":{"$ref":"#/components/schemas/FloorsClimbedSample"},"description":"Array of detailed samples of floors climbed throughout the day, as determined by the fitness data provider"},"step_samples":{"type":"array","items":{"$ref":"#/components/schemas/StepSample"},"description":"Array of detailed samples of steps performed throughout the day"}}},"DailyElevationSummary":{"title":"DailyElevationSummary","type":"object","properties":{"gain_planned_meters":{"minimum":0,"type":["number","null"],"description":"Elevation gain of the user throughout the day - this includes all elevation gain, and does _not_ represent net gain","examples":[150]},"loss_actual_meters":{"minimum":0,"type":["number","null"],"description":"Elevation loss of the user throughout the day","examples":[120]},"max_meters":{"type":["number","null"],"description":"Maximum elevation of the user during the day","examples":[450]},"min_meters":{"type":["number","null"],"description":"Minimum elevation of the user during the day","examples":[300]},"gain_actual_meters":{"minimum":0,"type":["number","null"],"description":"Planned elevation gain for the day","examples":[130]},"avg_meters":{"type":["number","null"],"description":"Average elevation of the user throughout the day","examples":[375]}}},"DailySwimmingSummary":{"title":"DailySwimmingSummary","type":"object","properties":{"num_laps":{"minimum":0,"type":["integer","null"],"description":"Total number of swimming laps performed during the day","contentEncoding":"int32","examples":[20]},"num_strokes":{"minimum":0,"type":["integer","null"],"description":"Total number of swimming strokes performed during the day","contentEncoding":"int32","examples":[500]},"pool_length_meters":{"minimum":0,"type":["integer","null"],"description":"Pool length for associated with the day","contentEncoding":"int32","examples":[25]}}},"DailyDistanceData":{"title":"DailyDistanceData","type":"object","properties":{"detailed":{"allOf":[{"$ref":"#/components/schemas/DailyDistanceDataDetailed"},{"description":"Object containing detailed distance information - this may included second-by-second samples"}]},"distance_meters":{"type":["number","null"],"description":"Total distance covered by the user throughout the day","examples":[8500]},"elevation":{"allOf":[{"$ref":"#/components/schemas/DailyElevationSummary"},{"description":"Average elevation of the user throughout the day"}]},"steps":{"type":["integer","null"],"description":"Total number of steps performed during the day","contentEncoding":"int32","examples":[12000]},"floors_climbed":{"minimum":0,"type":["integer","null"],"description":"Total number of elevation gain in floors climbed equivalent throughout the day, as determined by the fitness data provider","contentEncoding":"int32","examples":[15]},"swimming":{"allOf":[{"$ref":"#/components/schemas/DailySwimmingSummary"},{"description":"Summary information of the user's swimming statistics for the day, if applicable"}]}}},"DailyOxygenData":{"title":"DailyOxygenData","type":"object","properties":{"vo2max_ml_per_min_per_kg":{"type":["number","null"],"description":"VO2Max for the given user","examples":[45.5]},"avg_saturation_percentage":{"type":["number","null"],"description":"Average Oxygen Saturation percentage of the user during the day (SpO2 or SmO2)","examples":[98]},"vo2_samples":{"type":"array","items":{"$ref":"#/components/schemas/Vo2MaxSample"},"description":"Array of VO2 datapoints sampled throughout the day"},"saturation_samples":{"type":"array","items":{"$ref":"#/components/schemas/OxygenSaturationSample"},"description":"Array of Oxygen Saturation percentage datapoints sampled throughout the day"}}},"DailyCaloriesData":{"title":"DailyCaloriesData","type":"object","properties":{"BMR_calories":{"minimum":0,"type":["number","null"],"description":"BMR of the user on the specific day, which contributes to the total calories burned during the day","examples":[1800]},"net_activity_calories":{"minimum":0,"type":["number","null"],"description":"Net calorie burn coming just from exercise, excluding BMR","examples":[500]},"total_burned_calories":{"minimum":0,"type":["number","null"],"description":"Total number of calories burned during the day, including BMR","examples":[2300]},"net_intake_calories":{"minimum":0,"type":["number","null"],"description":"Net intake of calories during the period of the day","examples":[2000]},"calorie_samples":{"type":"array","items":{"$ref":"#/components/schemas/CalorieSample"},"description":"Detailed samples of cumulative calories burned at various timestamps over the period of the day"}}},"DailyMetadata":{"title":"DailyMetadata","type":"object","properties":{"start_time":{"type":["string","null"],"description":"The start time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]},"upload_type":{"allOf":[{"$ref":"#/components/schemas/UploadType1"},{"description":"The upload type for data in the associated day, providing information on whether data was automatically uploaded or user-entered. If any data point in a day is altered, the day should be classed as manual"}]},"end_time":{"type":["string","null"],"description":"The end time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h after start_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-10-28T10:00:00.000000+01:00"]},"timestamp_localization":{"oneOf":[{"$ref":"#/components/schemas/TimestampLocalization"},{"$ref":"#/components/schemas/TimestampLocalization1"}],"description":"Indicates whether the timestamps in this payload are localized (LOCAL) or in UTC","examples":[0]}}},"Daily":{"title":"Daily","type":"object","properties":{"active_durations_data":{"allOf":[{"$ref":"#/components/schemas/DailyActiveDurationsData"},{"description":"Object containing information related to the time spent in different activity intensities during over the day"}]},"scores":{"allOf":[{"$ref":"#/components/schemas/Scores"},{"description":"Scores for the user's performance on different metrics for the given day, as calculated by the fitness data provider"}]},"strain_data":{"allOf":[{"$ref":"#/components/schemas/DailyStrainData"},{"description":"Object containing information on the strain put on the user's body over a day"}]},"stress_data":{"allOf":[{"$ref":"#/components/schemas/StressData"},{"description":"Object containing information on the stress put on the user over a day"}]},"device_data":{"allOf":[{"$ref":"#/components/schemas/DeviceData"},{"description":"Object containing information on the device which recorded data for the day"}]},"tag_data":{"allOf":[{"$ref":"#/components/schemas/TagData"},{"description":"Object containing all user-entered or automatically tagged events in the day"}]},"heart_rate_data":{"allOf":[{"$ref":"#/components/schemas/DailyHeartRateData"},{"description":"Object containing heartrate-related information for the day"}]},"MET_data":{"allOf":[{"$ref":"#/components/schemas/DailyMETData"},{"description":"Object containing information on the Metabolic Equivalent of Task for the day"}]},"distance_data":{"allOf":[{"$ref":"#/components/schemas/DailyDistanceData"},{"description":"Object containing information related to distance covered during the associated day"}]},"oxygen_data":{"allOf":[{"$ref":"#/components/schemas/DailyOxygenData"},{"description":"Object containing information on oxygen-related metrics for the day"}]},"calories_data":{"allOf":[{"$ref":"#/components/schemas/DailyCaloriesData"},{"description":"Object containing calorie-related information for the user during the specific day"}]},"metadata":{"allOf":[{"$ref":"#/components/schemas/DailyMetadata"},{"description":"Object containing daily summary metadata"}]}}},"MenstruationMetadata":{"title":"MenstruationMetadata","type":"object","properties":{"start_time":{"type":["string","null"],"description":"The start time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]},"end_time":{"type":["string","null"],"description":"The end time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h after start_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-10-28T10:00:00.000000+01:00"]},"timestamp_localization":{"oneOf":[{"$ref":"#/components/schemas/TimestampLocalization"},{"$ref":"#/components/schemas/TimestampLocalization1"}],"description":"Indicates whether the timestamps in this payload are localized (LOCAL) or in UTC","examples":[0]}}},"MenstruationFlowSample":{"title":"MenstruationFlowSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"flow":{"allOf":[{"$ref":"#/components/schemas/Flow"},{"description":"Flag indicating the strength of the user's menstrual flow"}]}}},"MenstruationData":{"title":"MenstruationData","type":"object","properties":{"length_of_current_phase_days":{"type":["integer","null"],"description":"Length of current phase","contentEncoding":"int32","examples":[5]},"period_length_days":{"type":["integer","null"],"description":"Total length of period (i.e. menstrual bleeding)","contentEncoding":"int32","examples":[5]},"cycle_length_days":{"type":["string","null"],"description":"Total cycle length","examples":["28"]},"days_until_next_phase":{"type":["integer","null"],"description":"Number of days to reach the next phase (predicted)","contentEncoding":"int32","examples":[23]},"is_predicted_cycle":{"type":["string","null"],"description":"Flag indicating whether associated object is a prediction or user-logged information","examples":["true"]},"last_updated_time":{"type":["string","null"],"description":"Last time when the user recorded information regarding their cycle, in ISO8601 format, with microseconds precision","contentEncoding":"date-time","examples":["2022-12-12T14:03:05.000000-05:00"]},"current_phase":{"type":["integer","null"],"description":"Phase in associated cycle, (i.e. menstruation, fertile etc)","contentEncoding":"int32","examples":[1]},"period_start_date":{"type":["string","null"],"description":"Start date of menstrual cycle, in ISO8601 format","contentEncoding":"date","examples":["2022-11-28"]},"predicted_cycle_length_days":{"type":["integer","null"],"description":"Prediction of the cycle's total length","contentEncoding":"int32","examples":[28]},"menstruation_flow":{"type":"array","items":{"$ref":"#/components/schemas/MenstruationFlowSample"},"description":"List of user logs of information related to the strength of user's menstrual flow"},"day_in_cycle":{"type":["integer","null"],"description":"Number of day in cycle this object is associated with","contentEncoding":"int32","examples":[24]}}},"Menstruation":{"title":"Menstruation","type":"object","properties":{"metadata":{"allOf":[{"$ref":"#/components/schemas/MenstruationMetadata"},{"description":"Object containing daily summary metadata"}]},"menstruation_data":{"allOf":[{"$ref":"#/components/schemas/MenstruationData"},{"description":"Object containing information on user's menstruation for a given day"}]}}},"Micros":{"title":"Micros","type":"object","properties":{"iron_mg":{"type":["number","null"],"description":"Iron content of the associated food(s)","examples":[8.5]},"magnesium_mg":{"type":["number","null"],"description":"Magnesium content of the associated food(s)","examples":[320]},"vitamin_A_mg":{"type":["number","null"],"description":"Vitamin A content of the associated food(s)","examples":[0.9]},"vitamin_B12_mg":{"type":["number","null"],"description":"Vitamin B12 content of the associated food(s)","examples":[0.0024]},"biotin_mg":{"type":["number","null"],"description":"Biotin content of the associated food(s)","examples":[0.03]},"cystine_g":{"type":["number","null"],"description":"Cystine content of the associated food(s)","examples":[0.3]},"phenylalanine_g":{"type":["number","null"],"description":"Phenylalanine content of the associated food(s)","examples":[0.9]},"chloride_mg":{"type":["number","null"],"description":"Chloride content of the associated food(s)","examples":[2300]},"vitamin_D3_mg":{"type":["number","null"],"description":"Vitamin D3 content of the associated food(s)","examples":[0.015]},"isoleucine_g":{"type":["number","null"],"description":"Isoleucine content of the associated food(s)","examples":[0.8]},"calcium_mg":{"type":["number","null"],"description":"Calcium content of the associated food(s)","examples":[1000]},"iodine_mg":{"type":["number","null"],"description":"Iodine content of the associated food(s)","examples":[0.15]},"histidine_g":{"type":["number","null"],"description":"Histidine content of the associated food(s)","examples":[0.6]},"chromium_mg":{"type":["number","null"],"description":"Chromium content of the associated food(s)","examples":[0.035]},"vitamin_K_mg":{"type":["number","null"],"description":"Vitamin K content of the associated food(s)","examples":[0.12]},"manganese_mg":{"type":["number","null"],"description":"Manganese content of the associated food(s)","examples":[2.3]},"folic_acid_mg":{"type":["number","null"],"description":"Folic Acid content of the associated food(s)","examples":[0.4]},"leucine_g":{"type":["number","null"],"description":"Leucine content of the associated food(s)","examples":[1.2]},"caffeine_mg":{"type":["number","null"],"description":"Caffeine content of the associated food(s)","examples":[95]},"potassium_mg":{"type":["number","null"],"description":"Potassium content of the associated food(s)","examples":[3500]},"molybdenum_mg":{"type":["number","null"],"description":"Molybdenum content of the associated food(s)","examples":[0.045]},"lysine_g":{"type":["number","null"],"description":"Lysine content of the associated food(s)","examples":[0.9]},"tyrosine_g":{"type":["number","null"],"description":"Tyrosine content of the associated food(s)","examples":[0.7]},"valine_g":{"type":["number","null"],"description":"Valine content of the associated food(s)","examples":[0.8]},"omega6_g":{"type":["number","null"],"description":"Omega6 content of the associated food(s)","examples":[17]},"omega3_g":{"type":["number","null"],"description":"Omega3 content of the associated food(s)","examples":[1.6]},"vitamin_C_mg":{"type":["number","null"],"description":"Vitamin C content of the associated food(s)","examples":[90]},"zinc_mg":{"type":["number","null"],"description":"Zinc content of the associated food(s)","examples":[11]},"vitamin_D2_mg":{"type":["number","null"],"description":"Vitamin D2 content of the associated food(s)","examples":[0.01]},"vitamin_E_mg":{"type":["number","null"],"description":"Vitamin E content of the associated food(s)","examples":[15]},"pantothenic_acid_mg":{"type":["number","null"],"description":"Pantothenic content of the associated food(s)","examples":[5]},"riboflavin_mg":{"type":["number","null"],"description":"Riboflavin content of the associated food(s)","examples":[1.3]},"phosphorus_mg":{"type":["number","null"],"description":"Phosphorus content of the associated food(s)","examples":[1000]},"vitamin_D_mg":{"type":["number","null"],"description":"Vitamin D content of the associated food(s)","examples":[0.02]},"tryptophan_g":{"type":["number","null"],"description":"Tryptophan content of the associated food(s)","examples":[0.3]},"niacin_mg":{"type":["number","null"],"description":"Niacin content of the associated food(s)","examples":[16]},"copper_mg":{"type":["number","null"],"description":"Copper content of the associated food(s)","examples":[0.9]},"threonine_g":{"type":["number","null"],"description":"Threonine content of the associated food(s)","examples":[0.5]},"monounsaturated_fat_g":{"type":["number","null"],"description":"Monounsaturated fat content of the associated food(s)","examples":[15]},"folate_mg":{"type":["number","null"],"description":"Folate content of the associated food(s)","examples":[0.4]},"selenium_mg":{"type":["number","null"],"description":"Selenium content of the associated food(s)","examples":[0.055]},"vitamin_B6_mg":{"type":["number","null"],"description":"Vitamin B6 content of the associated food(s)","examples":[1.7]},"thiamin_mg":{"type":["number","null"],"description":"Thiamin content of the associated food(s)","examples":[1.2]},"polyunsaturated_fat_g":{"type":["number","null"],"description":"Polyunsaturated fat content of the associated food(s)","examples":[13]},"methionine_g":{"type":["number","null"],"description":"Methionine content of the associated food(s)","examples":[0.6]},"starch_g":{"type":["number","null"],"description":"Starch content of the associated food(s)","examples":[25]}}},"Macros":{"title":"Macros","type":"object","properties":{"fiber_g":{"type":["number","null"],"description":"Fiber content of the associated food(s)","examples":[25]},"calories":{"type":["number","null"],"description":"Calorie content of the associated food(s)","examples":[2000]},"fat_g":{"type":["number","null"],"description":"Fat content of the associated food(s)","examples":[65]},"sodium_mg":{"type":["number","null"],"description":"Sodium content of the associated food(s)","examples":[2300]},"alcohol_g":{"type":["number","null"],"description":"Alcohol content of the associated food(s)","examples":[14]},"trans_fat_g":{"type":["number","null"],"description":"Trans fat content of the associated food(s)","examples":[2]},"carbohydrates_g":{"type":["number","null"],"description":"Carbohydrates content of the associated food(s)","examples":[300]},"protein_g":{"type":["number","null"],"description":"Protein content of the associated food(s)","examples":[50]},"saturated_fat_g":{"type":["number","null"],"description":"Saturated fat content of the associated food(s)","examples":[20]},"sugar_g":{"type":["number","null"],"description":"Sugar content of the associated food(s)","examples":[25]},"cholesterol_mg":{"type":["number","null"],"description":"Cholesterol content of the associated food(s)","examples":[300]},"net_carbohydrates_g":{"type":["number","null"],"description":"Net carbs content of the associated food(s)","examples":[275]}}},"NutritionSummary":{"title":"NutritionSummary","type":"object","properties":{"micros":{"allOf":[{"$ref":"#/components/schemas/Micros"},{"description":"Summary of micronutrient information for a given day"}]},"macros":{"allOf":[{"$ref":"#/components/schemas/Macros"},{"description":"Summary of macronutrient information for a given day"}]},"water_ml":{"type":["number","null"],"description":"Water consumption of the user for a given day","examples":[2000]}}},"DrinkSample":{"title":"DrinkSample","type":"object","properties":{"drink_unit":{"type":["string","null"],"description":"Unit of measurement for the drink","examples":["ml"]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"drink_name":{"type":["string","null"],"description":"Name of drink consumed","examples":["Water"]},"drink_volume":{"type":["string","null"],"description":"Volume of drink consumed","examples":["250"]}}},"NutritionMetadata":{"title":"NutritionMetadata","type":"object","properties":{"start_time":{"type":["string","null"],"description":"The start time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T09:00:00.000000+02:00"]},"end_time":{"type":["string","null"],"description":"The end time of the associated day, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h after start_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-10-28T10:00:00.000000+01:00"]},"timestamp_localization":{"oneOf":[{"$ref":"#/components/schemas/TimestampLocalization"},{"$ref":"#/components/schemas/TimestampLocalization1"}],"description":"Indicates whether the timestamps in this payload are localized (LOCAL) or in UTC","examples":[0]}}},"Quantity":{"title":"Quantity","type":"object","properties":{"unit":{"type":["string","null"],"description":"Name of the unit of measurement","examples":["grams"]},"amount":{"minimum":0,"type":["number","null"],"description":"Amount of food, measured in unit defined in this object","examples":[100]}}},"Meal":{"title":"Meal","type":"object","properties":{"micros":{"allOf":[{"$ref":"#/components/schemas/Micros"},{"description":"Micronutrient information for associated food"}]},"type":{"allOf":[{"$ref":"#/components/schemas/Type3"},{"description":"Enum representing the category the consumed food/meal falls under (i.e. Breakfast/Lunch/Dinner etc","examples":["BREAKFAST"]}]},"id":{"type":["string","null"],"description":"Identifier for food logged by the user","examples":["food_123"]},"timestamp":{"type":["string","null"],"description":"Timestamp the food is associated with, in ISO8601 format, with microsecond precision","contentEncoding":"date-time","examples":["2022-12-12T08:53:00.000000+02:00"]},"quantity":{"allOf":[{"$ref":"#/components/schemas/Quantity"},{"description":"Quantity of the food that was consumed, containing information on amount & units in which this was recorded"}]},"name":{"type":["string","null"],"description":"Name of food logged by the user","examples":["Oatmeal"]},"macros":{"allOf":[{"$ref":"#/components/schemas/Macros"},{"description":"Macronutrient information for associated food"}]}}},"Nutrition":{"title":"Nutrition","type":"object","properties":{"summary":{"allOf":[{"$ref":"#/components/schemas/NutritionSummary"},{"description":"Summative nutritional information for a given day"}]},"drink_samples":{"type":"array","items":{"$ref":"#/components/schemas/DrinkSample"},"description":"Information on drinks the user consumed throughout the day"},"metadata":{"allOf":[{"$ref":"#/components/schemas/NutritionMetadata"},{"description":"Object containing daily summary metadata"}]},"meals":{"type":"array","items":{"$ref":"#/components/schemas/Meal"},"description":"Information on individual foods consumed throughout a given day"}}},"SnoringSample":{"title":"SnoringSample","type":"object","properties":{"duration_seconds":{"type":["number","null"],"description":"Duration of snoring episode","examples":[120]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"SnoringData":{"title":"SnoringData","type":"object","properties":{"start_time":{"type":["string","null"],"description":"The start time of the recording of snoring data, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T22:00:00.000000+02:00"]},"total_snoring_duration_seconds":{"type":["number","null"],"description":"Total duration for which the user was snoring","examples":[3600]},"samples":{"type":"array","items":{"$ref":"#/components/schemas/SnoringSample"},"description":"List of snoring information data points sampled throughout the sleep session"},"end_time":{"type":["string","null"],"description":"The end time of the recording of snoring data, in ISO8601 format with microsecond precisionTimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-24T08:00:00.000000+01:00"]},"num_snoring_events":{"type":["integer","null"],"description":"Number of times over the sleep period when the user started snoring, as determined by the device","contentEncoding":"int32","examples":[12]}}},"BreathSample":{"title":"BreathSample","type":"object","properties":{"breaths_per_min":{"type":["number","null"],"description":"User's respiration rate","examples":[16]},"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]}}},"BreathsData":{"title":"BreathsData","type":"object","properties":{"avg_breaths_per_min":{"type":["number","null"],"description":"Average breathing rate of the user during the sleep session","examples":[14]},"max_breaths_per_min":{"type":["number","null"],"description":"Maximum breathing rate of the user during the sleep session","examples":[18]},"start_time":{"type":["string","null"],"description":"The start time of the recording of breathing rate data, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T22:00:00.000000+02:00"]},"min_breaths_per_min":{"type":["number","null"],"description":"Minimum breathing rate of the user during the sleep session","examples":[10]},"samples":{"type":"array","items":{"$ref":"#/components/schemas/BreathSample"},"description":"List of breathing rate information sampled throughout the sleep session"},"on_demand_reading":{"type":["boolean","null"],"description":"Flag indicating if the reading was performed on demand, or if it was automatically captured by the device","examples":[false]},"end_time":{"type":["string","null"],"description":"The end time of the recording of breathing rate data, in ISO8601 format with microsecond precisionTimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-24T08:00:00.000000+01:00"]}}},"OxygenSaturationData":{"title":"OxygenSaturationData","type":"object","properties":{"samples":{"type":"array","items":{"$ref":"#/components/schemas/OxygenSaturationSample"},"description":"Array of Oxygen Saturation percentage datapoints sampled throughout the sleep session"},"start_time":{"type":["string","null"],"description":"The start time of the recording of oxygen saturation, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T22:00:00.000000+02:00"]},"avg_saturation_percentage":{"type":["number","null"],"description":"Average Oxygen Saturation percentage of the user during the sleep session","examples":[97]},"end_time":{"type":["string","null"],"description":"The end time of the recording of oxygen saturation, in ISO8601 format with microsecond precisionTimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-24T08:00:00.000000+01:00"]}}},"RespirationData":{"title":"RespirationData","type":"object","properties":{"snoring_data":{"allOf":[{"$ref":"#/components/schemas/SnoringData"},{"description":"Object containing information on snoring metrics for the sleep session"}]},"breaths_data":{"allOf":[{"$ref":"#/components/schemas/BreathsData"},{"description":"Object containing information on breathing rate for the sleep session"}]},"oxygen_saturation_data":{"allOf":[{"$ref":"#/components/schemas/OxygenSaturationData"},{"description":"Object containing information on saturation metrics for the sleep session"}]}}},"SleepDurationsAwakeData":{"title":"SleepDurationsAwakeData","type":"object","properties":{"duration_short_interruption_seconds":{"type":["number","null"],"description":"Total duration for which the user was awake during the sleep session, when the interruption of their sleep was less than 90 seconds","examples":[180]},"duration_awake_state_seconds":{"type":["number","null"],"description":"Total duration for which the user was awake during the sleep session","examples":[1200]},"wake_up_latency_seconds":{"type":["number","null"],"description":"Wake up latency, defined as time between the moment the user wakes up and the moment they get out of bed","examples":[300]},"num_wakeup_events":{"type":["integer","null"],"description":"Number of times the user woke up during the sleep session","contentEncoding":"int32","examples":[3]},"duration_long_interruption_seconds":{"type":["number","null"],"description":"Total duration for which the user was awake during the sleep session, when the interruption of their sleep was greater than 90 seconds.","examples":[600]},"sleep_latency_seconds":{"type":["number","null"],"description":"Sleep latency, defined as time between the moment the user lays in bed with the intention to sleep and the moment they actually fall asleep","examples":[900]},"num_out_of_bed_events":{"type":["integer","null"],"description":"Number of times the user got out of bed during the sleep session","contentEncoding":"int32","examples":[1]}}},"SleepDurationsAsleepData":{"title":"SleepDurationsAsleepData","type":"object","properties":{"num_REM_events":{"type":["integer","null"],"description":"Number of periods of REM sleep captured during the sleep session","contentEncoding":"int32","examples":[4]},"duration_asleep_state_seconds":{"type":["number","null"],"description":"Total duration for which the user was asleep, in any state","examples":[25200]},"duration_REM_sleep_state_seconds":{"type":["number","null"],"description":"Total duration for which the user was in a state of REM sleep","examples":[5400]},"duration_light_sleep_state_seconds":{"type":["number","null"],"description":"Total duration for which the user was in a state of light sleep","examples":[14400]},"duration_deep_sleep_state_seconds":{"type":["number","null"],"description":"Total duration for which the user was in a state of deep sleep","examples":[5400]}}},"SleepHypnogramSample":{"title":"SleepHypnogramSample","type":"object","properties":{"timestamp":{"type":["string","null"],"description":"Time with which the record is associated, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"level":{"allOf":[{"$ref":"#/components/schemas/Level"},{"description":"Sleep stage the user is in at a moment in time (e.g. deep sleep, light sleep etc)"}]}}},"SleepDurationsOtherData":{"title":"SleepDurationsOtherData","type":"object","properties":{"duration_unmeasurable_sleep_seconds":{"type":["number","null"],"description":"Total duration during which the user's state (awake, asleep, REM, etc) was unmeasurable during the sleep session","examples":[300]},"duration_in_bed_seconds":{"type":["number","null"],"description":"Total duration of time spent in bed","examples":[28800]}}},"SleepDurationsData":{"title":"SleepDurationsData","type":"object","properties":{"sleep_efficiency":{"maximum":100,"minimum":0,"type":["number","null"],"description":"Sleep efficiency of the user given as a percentage, measured as time spent asleep divided by time spent in bed","examples":[87.5]},"awake":{"allOf":[{"$ref":"#/components/schemas/SleepDurationsAwakeData"},{"description":"Object containing information on the duration the user spent awake during the sleep recording session"}]},"asleep":{"allOf":[{"$ref":"#/components/schemas/SleepDurationsAsleepData"},{"description":"Object containing information on the duration the user spent asleep during the sleep recording session"}]},"hypnogram_samples":{"type":"array","items":{"$ref":"#/components/schemas/SleepHypnogramSample"},"description":"List of sleep stage (Hypnogram) samples recorded during the user's sleep session"},"other":{"allOf":[{"$ref":"#/components/schemas/SleepDurationsOtherData"},{"description":"Object containing information on the miscellaneous duration data for the sleep recording session"}]}}},"SleepHeartRateDataSummary":{"title":"SleepHeartRateDataSummary","type":"object","properties":{"resting_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Resting HeartRate of the user, as determined by the fitness data provider","examples":[55]},"avg_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Average HeartRate of the user during the sleep session","examples":[60]},"max_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Maximum HeartRate of the user during the sleep session","examples":[75]},"avg_hrv_sdnn":{"type":["number","null"],"description":"Average HeartRate Variability of the user during the sleep session, computed using SDNN","examples":[45]},"min_hr_bpm":{"minimum":0,"type":["number","null"],"description":"Minimum HeartRate of the user during the sleep session","examples":[48]},"avg_hrv_rmssd":{"type":["number","null"],"description":"Average HeartRate Variability of the user during the sleep session, computed using RMSSD","examples":[35]},"user_max_hr_bpm":{"type":["number","null"],"description":"User's maximum HeartRate based on their age, and other factors as determined by the fitness data provider","examples":[185]}}},"SleepHeartRateDataDetailed":{"title":"SleepHeartRateDataDetailed","type":"object","properties":{"hrv_samples_rmssd":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateVariabilityDataSampleRMSSD"},"description":"Array of HeartRate Variability data samples recorded for the user during the sleep session, computed using RMSSD"},"hr_samples":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateDataSample"},"description":"Array of HeartRate data samples recorded for the user during the sleep session"},"hrv_samples_sdnn":{"type":"array","items":{"$ref":"#/components/schemas/HeartRateVariabilityDataSampleSDNN"},"description":"Array of HeartRate Variability data samples recorded for the user during the sleep session, computed using SDNN"}}},"SleepHeartRateData":{"title":"SleepHeartRateData","type":"object","properties":{"summary":{"allOf":[{"$ref":"#/components/schemas/SleepHeartRateDataSummary"},{"description":"Object containing summary information for the associated sleep session"}]},"detailed":{"allOf":[{"$ref":"#/components/schemas/SleepHeartRateDataDetailed"},{"description":"Object containing detailed heart rate information for the associated sleep session"}]}}},"SleepMetadata":{"title":"SleepMetadata","type":"object","properties":{"is_nap":{"type":["boolean","null"],"description":"Flag indicating whether the sleep session was a nap, or the user's main sleep session for the day","examples":[false]},"start_time":{"type":["string","null"],"description":"The start time of the associated sleep session, in ISO8601 format with microsecond precision. Will always fall on midnight of any given day, and will always be equal to 24h before end_time. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["1999-11-23T22:00:00.000000+02:00"]},"upload_type":{"type":"integer","description":"The upload type for the associated sleep session, providing information on whether this was an automatic sleep or user-entered","contentEncoding":"int32","examples":[1]},"end_time":{"type":["string","null"],"description":"The end time of the associated sleep session, in ISO8601 format with microsecond precisionTimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-24T08:00:00.000000+01:00"]},"timestamp_localization":{"oneOf":[{"$ref":"#/components/schemas/TimestampLocalization"},{"$ref":"#/components/schemas/TimestampLocalization1"}],"description":"Indicates whether the timestamps in this payload are localized (LOCAL) or in UTC","examples":[0]}}},"ReadinessData":{"title":"ReadinessData","type":"object","properties":{"readiness":{"maximum":100,"minimum":0,"type":["number","null"],"description":"User's readiness score for a given day, resulting from the sleep session","examples":[85]},"recovery_level":{"maximum":6,"minimum":0,"type":"integer","description":"User's recovery score for a given day, resulting from the sleep session - takes Enum value","contentEncoding":"int32","examples":[4]}}},"SleepTemperatureData":{"title":"SleepTemperatureData","type":"object","properties":{"delta":{"type":["number","null"],"description":"Variation in user's skin temperature from their baseline","examples":[0.5]}}},"Sleep":{"title":"Sleep","type":"object","properties":{"respiration_data":{"allOf":[{"$ref":"#/components/schemas/RespirationData"},{"description":"Object containing information on the user's respiration throughout the sleep session"}]},"sleep_durations_data":{"allOf":[{"$ref":"#/components/schemas/SleepDurationsData"},{"description":"Object containing information on the user's duration spent in various sleep stages"}]},"device_data":{"allOf":[{"$ref":"#/components/schemas/DeviceData"},{"description":"Object containing information on the device which recorded data for the payload"}]},"heart_rate_data":{"allOf":[{"$ref":"#/components/schemas/SleepHeartRateData"},{"description":"Object containing information on the user's heart rate during the sleep session"}]},"metadata":{"allOf":[{"$ref":"#/components/schemas/SleepMetadata"},{"description":"Object containing daily summary metadata"}]},"readiness_data":{"allOf":[{"$ref":"#/components/schemas/ReadinessData"},{"description":"Object containing information on the user's readiness for the day, based off the quality and duration of their sleep"}]},"temperature_data":{"allOf":[{"$ref":"#/components/schemas/SleepTemperatureData"},{"description":"Object containing body temperature information of the user during the sleep recording session"}]}}},"PlannedWorkoutStepTarget":{"title":"PlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["HEART_RATE"]}]},"type":{"type":"string"}}},"CadencePlannedWorkoutStepTarget":{"title":"CadencePlannedWorkoutStepTarget","type":"object","properties":{"cadence":{"type":["integer","null"],"description":"Ideal cadence value to be maintained for the workout step","contentEncoding":"int32","examples":[90]},"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["CADENCE"]}]},"cadence_low":{"type":["integer","null"],"description":"Minimum cadence threshold for the workout step - i.e. the user is to stay above this value during the workout","contentEncoding":"int32","examples":[85]},"cadence_high":{"type":["integer","null"],"description":"Maximum cadence threshold for the workout step - i.e. the user is to stay under this value during the workout step","contentEncoding":"int32","examples":[95]},"type":{"type":"string"}}},"HRPlannedWorkoutStepTarget":{"title":"HRPlannedWorkoutStepTarget","type":"object","properties":{"hr_percentage_low":{"type":["number","null"],"description":"Maximum max heart rate percentage threshold for the workout step - i.e. the user is to stay under this value during the workout step","examples":[65.5]},"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["HEART_RATE"]}]},"hr_percentage_high":{"type":["number","null"],"description":"Minimum heart rate percentage threshold for the workout step - i.e. the user is to stay above this value during the workout","examples":[85.5]},"hr_percentage":{"type":["number","null"],"description":"Ideal percentage of user's maximum HR to be maintained workout step","examples":[75.5]},"hr_bpm_high":{"type":["integer","null"],"description":"Maximum heart rate threshold for the workout step - i.e. the user is to stay under this value during the workout step","contentEncoding":"int32","examples":[175]},"hr_bpm_low":{"type":["integer","null"],"description":"Minimum heart rate threshold for the workout step - i.e. the user is to stay above this value during the workout","contentEncoding":"int32","examples":[130]},"type":{"type":"string"}}},"PowerPlannedWorkoutStepTarget":{"title":"PowerPlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["POWER"]}]},"power_percentage_low":{"type":["number","null"],"description":"Maximum percentage of Functional Threshold Power for the workout step - i.e. the user is to stay under this value during the workout step","examples":[65.5]},"power_percentage_high":{"type":["number","null"],"description":"Minimum percentage of Functional Threshold Power for the workout step - i.e. the user is to stay above this value during the workout","examples":[85.5]},"power_watt_high":{"type":["integer","null"],"description":"Maximum power threshold for the workout step - i.e. the user is to stay under this value during the workout step","contentEncoding":"int32","examples":[300]},"power_watt_low":{"type":["integer","null"],"description":"Minimum power threshold for the workout step - i.e. the user is to stay above this value during the workout","contentEncoding":"int32","examples":[200]},"power_watt":{"type":["integer","null"],"contentEncoding":"int32","examples":[250]},"power_percentage":{"type":["number","null"],"description":"Ideal percentage of user's Functional Threshold Power to be maintained workout step","examples":[75.5]},"type":{"type":"string"}}},"SpeedPlannedWorkoutStepTarget":{"title":"SpeedPlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["SPEED"]}]},"speed_percentage_high":{"type":["number","null"],"description":"Maximum speed threshold for the workout step - i.e. the user is to stay under this value during the workout step","examples":[85.5]},"speed_percentage_low":{"type":["number","null"],"description":"Minimum speed threshold for the workout step - i.e. the user is to stay above this value during the workout step","examples":[65.5]},"speed_percentage":{"type":["number","null"],"description":"Ideal percentage of user's Threshold Speed, based off their Threshold Pace, to be maintained workout step. Usually, the Threshold Pace is defined as the pace one could race at for 50 to 60 minutes","examples":[75.5]},"speed_meters_per_second":{"type":["number","null"],"description":"Ideal speed value to be maintained for the workout step","examples":[4.2]},"type":{"type":"string"}}},"PacePlannedWorkoutStepTarget":{"title":"PacePlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["PACE"]}]},"pace_minutes_per_kilometer":{"type":["number","null"],"description":"Ideal pace value to be maintained for the workout step","examples":[5.5]},"type":{"type":"string"}}},"TSSPlannedWorkoutStepTarget":{"title":"TSSPlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["TSS"]}]},"tss":{"type":["number","null"],"description":"Planned Training Stress Score to be achieved for the workout step","examples":[100.5]},"type":{"type":"string"}}},"IFPlannedWorkoutStepTarget":{"title":"IFPlannedWorkoutStepTarget","type":"object","properties":{"if_high":{"type":["number","null"],"description":"Maximum Intensity Factor to be achieved for the workout step","examples":[1.2]},"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["IF"]}]},"if_low":{"type":["number","null"],"description":"Minimum Intensity Factor to be achieved for the workout step","examples":[0.8]},"type":{"type":"string"}}},"RepetitionPlannedWorkoutStepTarget":{"title":"RepetitionPlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["REPETITION"]}]},"repetitions":{"type":["number","null"],"description":"Number of repetitions of the workout step to be performed","examples":[10]},"type":{"type":"string"}}},"SwimStrokePlannedWorkoutStepTarget":{"title":"SwimStrokePlannedWorkoutStepTarget","type":"object","properties":{"target_type":{"allOf":[{"$ref":"#/components/schemas/TargetType"},{"description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["SWIM_STROKE"]}]},"swim_strokes":{"type":["integer","null"],"description":"Number of swim strokes to be performed during the workout step","contentEncoding":"int32","examples":[50]},"type":{"type":"string"}}},"PlannedWorkoutStepDuration":{"title":"PlannedWorkoutStepDuration","type":"object","properties":{"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"TimePlannedWorkoutStepDuration":{"title":"TimePlannedWorkoutStepDuration","type":"object","properties":{"seconds":{"type":["integer","null"],"description":"Time duration to be elapsed for the workout step","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"PowerAbovePlannedWorkoutStepDuration":{"title":"PowerAbovePlannedWorkoutStepDuration","type":"object","properties":{"power_above_watts":{"type":["integer","null"],"description":"Threshold power goal to complete the workout step - once the user reaches above this power level, the step will be completed","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"PowerBelowPlannedWorkoutStepDuration":{"title":"PowerBelowPlannedWorkoutStepDuration","type":"object","properties":{"power_below_watts":{"type":["integer","null"],"description":"Threshold power goal to complete the workout step - once the user reaches below this power level, the step will be completed","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"FixedRestPlannedWorkoutStepDuration":{"title":"FixedRestPlannedWorkoutStepDuration","type":"object","properties":{"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"rest_seconds":{"type":["integer","null"],"description":"Time duration to be elapsed for the rest period","contentEncoding":"int32"},"type":{"type":"string"}}},"CaloriesPlannedWorkoutStepDuration":{"title":"CaloriesPlannedWorkoutStepDuration","type":"object","properties":{"calories":{"type":["integer","null"],"description":"Calorie burn target for the workout step - once the user reaches the target, the step will be completed","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"HRAbovePlannedWorkoutStepDuration":{"title":"HRAbovePlannedWorkoutStepDuration","type":"object","properties":{"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"hr_above_bpm":{"type":["integer","null"],"description":"Threshold heart rate goal to complete the workout step - once the user's heart rate reaches above below this value, the step will be completed","contentEncoding":"int32"},"type":{"type":"string"}}},"HRBelowPlannedWorkoutStepDuration":{"title":"HRBelowPlannedWorkoutStepDuration","type":"object","properties":{"hr_below_bpm":{"type":["integer","null"],"description":"Threshold heart rate goal to complete the workout step - once the user's heart rate reaches below this value, the step will be completed","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"RepsPlannedWorkoutStepDuration":{"title":"RepsPlannedWorkoutStepDuration","type":"object","properties":{"reps":{"type":["integer","null"],"description":"Target number of reps for the workout step - once the user completes this rep target, the step will be completed","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"DistancePlannedWorkoutStepDuration":{"title":"DistancePlannedWorkoutStepDuration","type":"object","properties":{"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"distance_meters":{"type":["integer","null"],"description":"Target distance for the workout step - once the user covers this distance, the step will be completed","contentEncoding":"int32"},"type":{"type":"string"}}},"StepsPlannedWorkoutStepDuration":{"title":"StepsPlannedWorkoutStepDuration","type":"object","properties":{"steps":{"type":["integer","null"],"description":"Target number of steps for the workout step - once the user performs this number of steps, the step will be completed","contentEncoding":"int32"},"duration_type":{"allOf":[{"$ref":"#/components/schemas/DurationType"},{"description":"Type of condition that must be fulfilled to consider the workout step complete"}]},"type":{"type":"string"}}},"PlannedWorkoutStep":{"title":"PlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTargets"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"allOf":[{"$ref":"#/components/schemas/Intensity"},{"description":"Planned intensity for the workout step"}]},"order":{"type":"integer","description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"description":{"type":"string","description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDurations"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":"string","description":"Name of workout step"}}},"PlannedWorkoutRepeatStep":{"title":"PlannedWorkoutRepeatStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"steps":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStep"},"description":"List of steps to be repeated for this workout step - e.g. if a user wants to schedule 5 repetitions of 100m sprints plus 20s rest in between"},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":["string","null"],"description":"Name of workout step"}}},"SwimmingPlannedWorkoutStep":{"title":"SwimmingPlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"equipement_type":{"allOf":[{"$ref":"#/components/schemas/EquipementType"},{"description":"Workout equipment to be used during the workout step"}]},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":["string","null"],"description":"Name of workout step"},"stroke_type":{"allOf":[{"$ref":"#/components/schemas/StrokeType1"},{"description":"Stroke type used for the workout step (e.g. breaststroke)"}]}}},"CardioPlannedWorkoutStep":{"title":"CardioPlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"exercice_name":{"type":["string","null"],"description":"Name of exercise to be performed for the workout step"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"exercice_category":{"allOf":[{"$ref":"#/components/schemas/ExerciceCategory"},{"description":"Type of exercise to be performed for the workout step"}]},"name":{"type":["string","null"],"description":"Name of workout step"}}},"StrengthPlannedWorkoutStep":{"title":"StrengthPlannedWorkoutStep","type":"object","properties":{"weight_kg":{"type":["number","null"],"description":"Weight to be lifted for the exercise"},"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"exercice_name":{"type":["string","null"],"description":"Name of strength exercise to be performed for the workout step"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"exercice_category":{"allOf":[{"$ref":"#/components/schemas/ExerciceCategory1"},{"description":"Type of strength exercise to be performed for the workout step"}]},"name":{"type":["string","null"],"description":"Name of workout step"}}},"YogaPlannedWorkoutStep":{"title":"YogaPlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":["string","null"],"description":"Name of workout step"}}},"PilatesPlannedWorkoutStep":{"title":"PilatesPlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":["string","null"],"description":"Name of workout step"}}},"RunningPlannedWorkoutStep":{"title":"RunningPlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":["string","null"],"description":"Name of workout step"}}},"CyclingPlannedWorkoutStep":{"title":"CyclingPlannedWorkoutStep","type":"object","properties":{"targets":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},"description":"List of targets for the workout"},"type":{"allOf":[{"$ref":"#/components/schemas/Type4"},{"description":"Type of workout step - either repeat or one-off"}]},"intensity":{"type":["integer","null"],"description":"Planned intensity for the workout step","contentEncoding":"int32"},"order":{"type":["integer","null"],"description":"Position of the workout step in the overall workout","contentEncoding":"int32"},"description":{"type":["string","null"],"description":"Description of workout step"},"durations":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},"description":"List of conditions to be fulfilled for the workout step to be completed - all of the conditions must be completed"},"name":{"type":["string","null"],"description":"Name of workout step"}}},"PlannedWorkoutMetadata":{"title":"PlannedWorkoutMetadata","type":"object","properties":{"estimated_energy_kj":{"type":["number","null"],"description":"Estimated energy expenditure for the workout"},"estimated_speed_meters_per_second":{"type":["number","null"],"description":"Estimated speed for the workout"},"estimated_elevation_gain_meters":{"type":["number","null"],"description":"Estimated elevation gain for the workout"},"estimated_tss":{"type":["number","null"],"description":"Estimated Training Stress Score for the workout"},"estimated_calories":{"type":["integer","null"],"description":"Estimated calorie burn for the workout","contentEncoding":"int32"},"created_date":{"type":["string","null"],"description":"The creation datetime of the associated workout, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-23T09:00:00.000000+02:00"]},"planned_date":{"type":["string","null"],"description":"The planned start datetime, in ISO8601 format with microsecond precision. TimeZone info will be provided whenever possible. If absent, the time corresponds to the user's local time","contentEncoding":"date-time","examples":["2022-11-24T09:00:00.000000+02:00"]},"type":{"allOf":[{"$ref":"#/components/schemas/Type13"},{"description":"The name - either user-entered or given by the fitness data provider - of the associated workout plan"}]},"id":{"type":["string","null"]},"estimated_duration_seconds":{"type":["integer","null"],"description":"Estimated workout duration","contentEncoding":"int32"},"estimated_pace_minutes_per_kilometer":{"type":["number","null"],"description":"Estimated pace for the workout"},"provider":{"type":"string","description":"Name of the original source of the workout plan"},"estimated_tscore":{"type":["number","null"]},"description":{"type":["string","null"],"description":"Description of the workout"},"name":{"type":["string","null"],"description":"Name of the workout plan"},"estimated_distance_meters":{"type":["integer","null"],"description":"Estimated distance for the workout","contentEncoding":"int32"},"estimated_if":{"type":["number","null"],"description":"Estimated Intensity Factor for the workout"},"pool_length_meters":{"type":["integer","null"],"description":"Pool length of the pool used for the workout - only relevant for swimming activity types","contentEncoding":"int32"}}},"PlannedWorkout":{"title":"PlannedWorkout","type":"object","properties":{"steps":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkoutSteps"},"description":"List of exercises/steps/intervals for the workout plan"},"metadata":{"allOf":[{"$ref":"#/components/schemas/PlannedWorkoutMetadata"},{"description":"Metadata for the workout plan"}]}}},"UserAuthWebhook":{"title":"UserAuthWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which this authentication webhook is for"},"widget_session_id":{"type":["string","null"],"description":"The widget session from which the user authenticated from"},"reference_id":{"type":["string","null"],"description":"Connection identifier on the developer's end, used to tie connection back to a user on the developer's platform"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'auth'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"PermissionChangeWebhook":{"title":"PermissionChangeWebhook","type":"object","properties":{"type":{"type":"string","description":"The type of webhook event received. For this webhook, this would be 'permission_change'."},"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which this permission change webhook is for"},"status":{"allOf":[{"$ref":"#/components/schemas/Status2"},{"description":"Status of the webhook event."}]},"message":{"type":"string","description":"A message describing the webhook event."},"version":{"type":"string","description":"The version of the webhook."},"scopes_added":{"type":"string","description":"A comma-separated list of scopes that were added during the permission change."},"scopes_removed":{"type":"string","description":"A comma-separated list of scopes that were removed during the permission change."}}},"UserReauthWebhook":{"title":"UserReauthWebhook","type":"object","properties":{"old_user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The old user that was authenticated"},"new_user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The new user that was authenticated"},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'user_reauth'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"UserDeauthWebhook":{"title":"UserDeauthWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user that was deauthenticated"},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'deauth'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"AccessRevokedWebhook":{"title":"AccessRevokedWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which has revoked access to Terra or your application"},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'access_revoked'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"GoogleNoDataSourceWebhook":{"title":"GoogleNoDataSourceWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which no google data sources can be found for."},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'google_no_datasource'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"ConnectionErrorWebhook":{"title":"ConnectionErrorWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"A connection error has happened for this user. Generally this means, you should deauthenticate them."},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'connection_error'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"DataProcessingWebhook":{"title":"DataProcessingWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which data is processing for"},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'processing'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"LargeRequestSendingWebhook":{"title":"LargeRequestSendingWebhook","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which large request is sending for"},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"expected_payloads":{"type":"number","description":"The number of payloads you should be expecting from the large request"},"reference":{"type":"string","description":"The reference for which all payloads will have in their 'terra-reference' headers"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'large_request_sending'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status1"},{"description":"Status of the webhook. This is either 'success' or 'error'"}]},"version":{"type":"string"}}},"LargeRequestProcessingResponse":{"title":"LargeRequestProcessingResponse","type":"object","properties":{"user":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":"The user for which large request is sending for"},"message":{"type":"string","description":"A message giving a small context on what the payload is about"},"reference":{"type":"string","description":"The reference for which all payloads will have in their 'terra-reference' headers"},"type":{"type":"string","description":"The type of webhook event received. For this, webhook, this would be 'large_request_prcessing'"},"status":{"allOf":[{"$ref":"#/components/schemas/Status10"},{"description":"Status of the webhook. This will be 'processing'"}]},"version":{"type":"string"}}},"AuthenticationFailedWebhook":{"title":"AuthenticationFailedWebhook","type":"object","properties":{"reference_id":{"type":["string","null"]},"type":{"type":"string"},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]},"reason":{"type":"string"},"status":{"allOf":[{"$ref":"#/components/schemas/Status"},{}]},"message":{"type":"string"},"widget_session_id":{"type":["string","null"]},"version":{"type":"string"}}},"ConnectionDegradedWebhook":{"title":"ConnectionDegradedWebhook","type":"object","properties":{"status":{"allOf":[{"$ref":"#/components/schemas/Status"},{}]},"message":{"type":"string"},"type":{"type":"string"},"user":{"allOf":[{"$ref":"#/components/schemas/User"},{"description":"Terra User object"}]},"version":{"type":"string"}}},"IntegrationsResponse":{"title":"IntegrationsResponse","type":"object","properties":{"status":{"type":"string","description":"Status of the API response","examples":["success"]},"providers":{"type":"array","items":{"$ref":"#/components/schemas/IntegrationProvider"},"description":"List of integration providers with their details"}}},"IntegrationProvider":{"title":"IntegrationProvider","type":"object","properties":{"provider":{"type":"string","description":"Identifier for the provider","examples":["MAPMYFITNESS"]},"name":{"type":"string","description":"Display name of the integration","examples":["MapMyFitness"]},"icon":{"type":"string","description":"URL for the provider's icon image","examples":["https://api.tryterra.co/v2/static/assets/img/app_icons/mapmyfitness.webp"]},"setup":{"type":"string","description":"Indicates how the integration is set up","examples":["API_KEYS_MANAGED"]},"enabled":{"type":"boolean","description":"Whether the integration is enabled","examples":[true]},"types":{"allOf":[{"$ref":"#/components/schemas/Types"},{"description":"Indicates the types of data available through the provider"}]}}},"Activity400Error1":{"title":"Activity400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Activity401Error1":{"title":"Activity401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Activity404Error1":{"title":"Activity404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"ActivityRequest":{"title":"ActivityRequest","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Activity"},"description":"List of user-tracked workouts to post to data provider"}}},"ActivityResponse":{"title":"ActivityResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Activity"},"description":""},"type":{"type":["string","null"]}}},"ActivityResponse1":{"title":"ActivityResponse1","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"log_ids":{"type":"array","items":{"type":"string"},"description":"List of identifiers for the objects created, returned in the same order they were posted. I.e. Posting [ObjectA, ObjectB] will return [IdentifierA, IdentifierB]"},"message":{"type":"string","default":"Activity successfully logged"}}},"ActivityLevel":{"title":"ActivityLevel","enum":["UNKNOWN","REST","INACTIVE","LOW_INTENSITY","MEDIUM_INTENSITY","HIGH_INTENSITY"],"type":"string","description":"Intensity of the user's activity at an instant in time","examples":["MEDIUM_INTENSITY"]},"Athlete400Error1":{"title":"Athlete400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Athlete401Error1":{"title":"Athlete401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Athlete404Error1":{"title":"Athlete404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"AuthAuthenticateUser400Error1":{"title":"AuthAuthenticateUser400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"AuthAuthenticateUser404Error1":{"title":"AuthAuthenticateUser404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status15"},{"description":"indicates that an error happened (value is error)"}]}}},"AuthAuthenticateUserRequest":{"title":"AuthAuthenticateUserRequest","type":"object","properties":{"language":{"type":"string"},"reference_id":{"type":"string"},"auth_success_redirect_url":{"type":"string"},"auth_failure_redirect_url":{"type":"string"}}},"AuthAuthenticateUserResponse":{"title":"AuthAuthenticateUserResponse","type":"object","properties":{"status":{"allOf":[{"$ref":"#/components/schemas/Status13"},{"description":"indicates that the request was successful","examples":["success"]}]},"user_id":{"type":"string","description":"User ID for the user being created","examples":["23dc2540-7139-44c6-8158-f81196e2cf2e"]},"auth_url":{"type":"string","description":"authentication URL the user must be redirected to in order to link their account","examples":["https://www.fitbit.com/oauth2/authorize?response_type=code&client_id=23BBG9&scope=settings+nutrition+sleep+heartrate+electrocardiogram+weight+respiratory_rate+oxygen_saturation+profile+temperature+cardio_fitness+activity+location&state=bLqqjPie9ptwoWm6VBxHCu6JkkoWJp"]}}},"AuthDeauthenticateUser404Error1":{"title":"AuthDeauthenticateUser404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status15"},{"description":"indicates that an error happened (value is error)"}]}}},"AuthDeauthenticateUserResponse":{"title":"AuthDeauthenticateUserResponse","type":"object","properties":{"status":{"allOf":[{"$ref":"#/components/schemas/Status16"},{"description":"indicates that an error happened (value is success)"}]}}},"AuthGenerateAuthToken404Error1":{"title":"AuthGenerateAuthToken404Error1","type":"object","properties":{"status":{"type":"string","examples":["error"]},"message":{"type":"string","examples":["Invalid dev-id was provided"]}}},"AuthGenerateAuthTokenResponse":{"title":"AuthGenerateAuthTokenResponse","type":"object","properties":{"status":{"type":"string","examples":["success"]},"token":{"type":"string","examples":["250c68b9c21b78e40e7a3285a2d538d3bc24aabd3b4c76a782fb0a571ca4501d"]},"expires_in":{"type":"integer","contentEncoding":"int32","default":0,"examples":[180]}}},"AuthGenerateWidgetSession400Error1":{"title":"AuthGenerateWidgetSession400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"AuthGenerateWidgetSessionResponse":{"title":"AuthGenerateWidgetSessionResponse","type":"object","properties":{"session_id":{"type":"string","description":"Session ID for the widget authentication session","examples":["23dc2540-7139-44c6-8158-f81196e2cf2e"]},"url":{"type":"string","description":"the widget URL the user must be redirected to in order to link their account","examples":["https://widget.tryterra.co/session/344d475f-296a-489a-a88c-54183671dafd"]},"status":{"allOf":[{"$ref":"#/components/schemas/Status16"},{"description":"indicates that an error happened (value is success)","examples":["success"]}]},"expires_in":{"type":"number","description":"a number in seconds depicting how long the url is valid for","examples":[900]}}},"Body400Error1":{"title":"Body400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Body401Error1":{"title":"Body401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Body404Error1":{"title":"Body404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"BodyRequest":{"title":"BodyRequest","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Body"},"description":"Body measurement metrics to post to data provider"}}},"BodyRequest1":{"title":"BodyRequest1","type":"object","properties":{"log_ids":{"type":"array","items":{"type":"string"},"description":"List of identifiers for body metrics entries to be deleted"}}},"BodyResponse":{"title":"BodyResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Body"},"description":""},"type":{"type":["string","null"]}}},"BodyResponse1":{"title":"BodyResponse1","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"log_ids":{"type":"array","items":{"type":"string"},"description":"List of identifiers for the objects created, returned in the same order they were posted. I.e. Posting [ObjectA, ObjectB] will return [IdentifierA, IdentifierB]"},"message":{"type":"string","default":"Body data successfully logged"}}},"BodyResponse2":{"title":"BodyResponse2","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"processed_data":{"type":"array","items":{"$ref":"#/components/schemas/ProcessedDatum"},"description":""}}},"BodyResponse3":{"title":"BodyResponse3","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"processed_data":{"type":"array","items":{"$ref":"#/components/schemas/ProcessedDatum1"},"description":""}}},"BulkUserInfo400Error1":{"title":"BulkUserInfo400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"BulkUserInfo404Error1":{"title":"BulkUserInfo404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Daily400Error1":{"title":"Daily400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Daily401Error1":{"title":"Daily401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Daily404Error1":{"title":"Daily404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"DailyResponse":{"title":"DailyResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Daily"},"description":""},"type":{"type":["string","null"]}}},"Data":{"title":"Data","type":"object","properties":{"next":{"type":["integer","null"],"description":"The next page number, or null if there is no next page","contentEncoding":"int32"},"max_page":{"type":"integer","description":"The maximum page index","contentEncoding":"int32"},"results":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":""}}},"DurationType":{"title":"DurationType","enum":["TIME","DISTANCE_METERS","HR_LESS_THAN","HR_GREATER_THAN","CALORIES","OPEN","POWER_LESS_THAN","POWER_GREATER_THAN","REPETITION_TIME","REPS","FIXED_REST","TIME_AT_VALID_CDA","STEPS"],"type":"string","description":"Type of condition that must be fulfilled to consider the workout step complete"},"EquipementType":{"title":"EquipementType","enum":["NONE","SWIM_FINS","SWIM_KICKBOARD","SWIM_PADDLES","SWIM_PULL_BUOY","SWIM_SNORKEL"],"type":"string","description":"Workout equipment to be used during the workout step"},"ExerciceCategory":{"title":"ExerciceCategory","enum":["UNKNOWN","BENCH_PRESS","CALF_RAISE","CARDIO","CARRY","CHOP","CORE","CRUNCH","CURL","DEADLIFT","FLYE","HIP_RAISE","HIP_STABILITY","HIP_SWING","HYPEREXTENSION","LATERAL_RAISE","LEG_CURL","LEG_RAISE","LUNGE","OLYMPIC_LIFT","PLANK","PLYO","PULL_UP","PUSH_UP","ROW","SHOULDER_PRESS","SHOULDER_STABILITY","SHRUG","SIT_UP","SQUAT","TOTAL_BODY","TRICEPS_EXTENSION","WARM_UP","RUN","BIKE","CARDIO_SENSORS"],"type":"string","description":"Type of exercise to be performed for the workout step"},"ExerciceCategory1":{"title":"ExerciceCategory1","enum":["UNKNOWN","BENCH_PRESS","CALF_RAISE","CARDIO","CARRY","CHOP","CORE","CRUNCH","CURL","DEADLIFT","FLYE","HIP_RAISE","HIP_STABILITY","HIP_SWING","HYPEREXTENSION","LATERAL_RAISE","LEG_CURL","LEG_RAISE","LUNGE","OLYMPIC_LIFT","PLANK","PLYO","PULL_UP","PUSH_UP","ROW","SHOULDER_PRESS","SHOULDER_STABILITY","SHRUG","SIT_UP","SQUAT","TOTAL_BODY","TRICEPS_EXTENSION","WARM_UP","RUN","BIKE","CARDIO_SENSORS"],"type":"string","description":"Type of strength exercise to be performed for the workout step"},"Flow":{"title":"Flow","enum":["UNKNOWN","NONE","LIGHT","MEDIUM","HEAVY","HAD"],"type":"string","description":"Flag indicating the strength of the user's menstrual flow"},"GlucoseLevelFlag":{"title":"GlucoseLevelFlag","enum":["NORMAL","HIGH","LOW"],"type":"string","description":"Flag indicating state of user's blood glucose level","examples":["NORMAL"]},"IntegrationsResponse1":{"title":"IntegrationsResponse1","type":"object","properties":{"providers":{"type":"array","items":{"type":"string"},"description":""},"sdk_resource":{"type":"array","items":{"type":"string"},"description":""},"status":{"allOf":[{"$ref":"#/components/schemas/Status"},{}]}}},"Intensity":{"title":"Intensity","enum":["REST","WARMUP","COOLDOWN","RECOVERY","INTERVAL","ACTIVE"],"type":"string","description":"Planned intensity for the workout step"},"Level":{"title":"Level","enum":["UNKNOWN","AWAKE","SLEEPING","OUT_OF_BED","LIGHT","DEEP","REM"],"type":"string","description":"Sleep stage the user is in at a moment in time (e.g. deep sleep, light sleep etc)"},"Menstruation400Error1":{"title":"Menstruation400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Menstruation401Error1":{"title":"Menstruation401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Menstruation404Error1":{"title":"Menstruation404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"MenstruationResponse":{"title":"MenstruationResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Menstruation"},"description":""},"type":{"type":["string","null"]}}},"Nutrition400Error1":{"title":"Nutrition400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Nutrition401Error1":{"title":"Nutrition401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Nutrition404Error1":{"title":"Nutrition404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Nutrition404Error31":{"title":"Nutrition404Error31","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status15"},{"description":"indicates that an error happened (value is error)"}]}}},"NutritionRequest":{"title":"NutritionRequest","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Nutrition"},"description":"Nutrition entry to post to data provider"}}},"NutritionRequest1":{"title":"NutritionRequest1","type":"object","properties":{"data":{"type":"array","items":{"type":"string"},"description":"List of identifiers for nutrition entries to be deleted"}}},"NutritionResponse":{"title":"NutritionResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Nutrition"},"description":""},"type":{"type":["string","null"]}}},"NutritionResponse1":{"title":"NutritionResponse1","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"log_ids":{"type":"array","items":{"type":"string"},"description":"List of identifiers for the objects created, returned in the same order they were posted. I.e. Posting [ObjectA, ObjectB] will return [IdentifierA, IdentifierB]"},"message":{"type":"string","default":"Nutrition successfully logged"}}},"NutritionResponse2":{"title":"NutritionResponse2","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"processed_data":{"type":"array","items":{"$ref":"#/components/schemas/ProcessedDatum2"},"description":""}}},"PlannedWorkout400Error1":{"title":"PlannedWorkout400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"PlannedWorkout404Error1":{"title":"PlannedWorkout404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"PlannedWorkout401Error1":{"title":"PlannedWorkout401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"PlannedWorkout401Error21":{"title":"PlannedWorkout401Error21","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status15"},{"description":"indicates that an error happened (value is error)"}]}}},"PlannedWorkoutRequest":{"title":"PlannedWorkoutRequest","required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkout"},"description":"PlannedWorkout entry to post to data provider"}}},"PlannedWorkoutRequest1":{"title":"PlannedWorkoutRequest1","type":"object","properties":{"data":{"type":"array","items":{"type":"string"},"description":"List of identifiers for planned workout entries to be deleted"}}},"PlannedWorkoutResponse":{"title":"PlannedWorkoutResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"log_ids":{"type":"array","items":{"type":"string"},"description":"List of identifiers for the objects created, returned in the same order they were posted. I.e. Posting [ObjectA, ObjectB] will return [IdentifierA, IdentifierB]"},"message":{"type":"string","default":"Nutrition successfully logged"}}},"PlannedWorkoutResponse1":{"title":"PlannedWorkoutResponse1","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/PlannedWorkout"},"description":""},"type":{"type":["string","null"]}}},"PlannedWorkoutResponse2":{"title":"PlannedWorkoutResponse2","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"processed_data":{"type":"array","items":{"$ref":"#/components/schemas/ProcessedDatum4"},"description":""}}},"PlannedWorkoutResponse3":{"title":"PlannedWorkoutResponse3","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"processed_data":{"allOf":[{"$ref":"#/components/schemas/ProcessedData"},{}]}}},"ProcessedData":{"title":"ProcessedData","type":"object","properties":{"id":{"type":"string","description":"Identifier of the planned workout whose deletion was attempted"},"response_code":{"type":"integer","description":"Response code from the provider when attempting to delete the planned workout","contentEncoding":"int32"}}},"ProcessedDatum":{"title":"ProcessedDatum","type":"object","properties":{"id":{"type":"string","description":"Identifier of the body metric entries whose deletion was attempted"},"response_code":{"type":"integer","description":"Response code from the provider when attempting to delete the body metric entries","contentEncoding":"int32"}}},"ProcessedDatum1":{"title":"ProcessedDatum1","type":"object","properties":{"id":{"type":"string","description":"Identifier of the body metric entry whose deletion was attempted"},"response_code":{"type":"integer","description":"Response code from the provider when attempting to delete the body metric entry","contentEncoding":"int32"}}},"ProcessedDatum2":{"title":"ProcessedDatum2","type":"object","properties":{"id":{"type":"string","description":"Identifier of the nutrition log whose deletion was attempted"},"response_code":{"type":"integer","description":"Response code from the provider when attempting to delete the nutrition log","contentEncoding":"int32"}}},"ProcessedDatum4":{"title":"ProcessedDatum4","type":"object","properties":{"id":{"type":"string","description":"Identifier of the planned workout whose deletion was attempted"},"response_code":{"type":"integer","description":"Response code from the provider when attempting to delete the planned workout","contentEncoding":"int32"}}},"SampleType":{"title":"SampleType","enum":["UNKNOWN","BLOOD","BREATH","URINE"],"type":"string","description":"Flag indicating the ketone sample type (e.g. blood, breath, urine)"},"Sleep400Error1":{"title":"Sleep400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"Sleep401Error1":{"title":"Sleep401Error1","type":"object","properties":{"message":{"type":"string","description":"An error message","examples":["unauthorized"]}}},"Sleep404Error1":{"title":"Sleep404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"SleepResponse":{"title":"SleepResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"data":{"type":"array","items":{"$ref":"#/components/schemas/Sleep"},"description":""},"type":{"type":["string","null"]}}},"Status":{"title":"Status","enum":["success","error"],"type":"string","examples":["error"]},"Status1":{"title":"Status1","enum":["success","error"],"type":"string","description":"Status of the webhook. This is either 'success' or 'error'"},"Status2":{"title":"Status2","const":"success","type":"string","description":"Status of the webhook event."},"Status10":{"title":"Status10","enum":["success","error"],"type":"string","description":"Status of the webhook. This will be 'processing'"},"Status13":{"title":"Status13","enum":["success","error"],"type":"string","description":"indicates that the request was successful","examples":["success"]},"Status14":{"title":"Status14","const":"error","type":"string","description":"indicates that an error happened (value is error)"},"Status15":{"title":"Status15","enum":["success","error"],"type":"string","description":"indicates that an error happened (value is error)"},"Status16":{"title":"Status16","enum":["success","error"],"type":"string","description":"indicates that an error happened (value is success)","examples":["success"]},"Status18":{"title":"Status18","enum":["success","error"],"type":"string","description":"Indicates that the request was successful","examples":["success"]},"Status19":{"title":"Status19","enum":["success","error"],"type":"string","description":"Indicates an error happened"},"Status56":{"title":"Status56","const":"error","type":"string","description":"Indicates that an error occurred (value is `error`)"},"StrokeType":{"title":"StrokeType","enum":["OTHER","FREESTYLE","BACKSTROKE","BREASTSTROKE","BUTTERFLY","REST"],"type":"string","description":"Stroke type - only relevant for swimming activities","examples":["FREESTYLE"]},"StrokeType1":{"title":"StrokeType1","enum":["OTHER","FREESTYLE","BACKSTROKE","BREASTSTROKE","BUTTERFLY","REST"],"type":"string","description":"Stroke type used for the workout step (e.g. breaststroke)"},"Subscriptions400Error1":{"title":"Subscriptions400Error1","type":"object","properties":{"message":{"type":"string","description":"A detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status56"},{"description":"Indicates that an error occurred (value is `error`)"}]}}},"SubscriptionsResponse":{"title":"SubscriptionsResponse","type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/User"},"description":""}}},"SubscriptionsResponse1":{"title":"SubscriptionsResponse1","type":"object","properties":{"data":{"allOf":[{"$ref":"#/components/schemas/Data"},{}]}}},"TargetType":{"title":"TargetType","enum":["SPEED","HEART_RATE","OPEN","CADENCE","POWER","GRADE","RESISTANCE","POWER_LAP","SWIM_STROKE","SPEED_LAP","HEART_RATE_LAP","PACE","HEART_RATE_THRESHOLD_PERCENTAGE","HEART_RATE_MAX_PERCENTAGE","SPEED_PERCENTAGE","POWER_PERCENTAGE","REPETITION","TSS","IF"],"type":"string","description":"Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed","examples":["HEART_RATE"]},"TimestampLocalization":{"title":"TimestampLocalization","const":0,"type":"integer","description":"UTC timestamps with +00:00 offset. This avoids \"Z\" notation to ensure compatibility across parsers."},"TimestampLocalization1":{"title":"TimestampLocalization1","const":1,"type":"integer","description":"LOCAL timestamps that may include or exclude the timezone, following ISO8601."},"TrendArrow":{"title":"TrendArrow","enum":["UNKNOWN","FALLING_QUICKLY","FALLING","FLAT","RISING","RISING_QUICKLY"],"type":"string","description":"Flag indicating the current trend in the user's blood glucose level (e.g. rising, constant, falling)","examples":["FLAT"]},"Type":{"title":"Type","const":0,"type":"integer","description":"Oxygen saturation measurement for blood."},"Type1":{"title":"Type1","const":1,"type":"integer","description":"Oxygen saturation measurement for muscle."},"Type2":{"title":"Type2","enum":["IN_VEHICLE","BIKING","STILL","UNKNOWN","TILTING","WALKING","RUNNING","AEROBICS","BADMINTON","BASEBALL","BASKETBALL","BIATHLON","HANDBIKING","MOUNTAIN_BIKING","ROAD_BIKING","SPINNING","STATIONARY_BIKING","UTILITY_BIKING","BOXING","CALISTHENICS","CIRCUIT_TRAINING","CRICKET","DANCING","ELLIPTICAL","FENCING","AMERICAN_FOOTBALL","AUSTRALIAN_FOOTBALL","ENGLISH_FOOTBALL","FRISBEE","GARDENING","GOLF","GYMNASTICS","HANDBALL","HIKING","HOCKEY","HORSEBACK_RIDING","HOUSEWORK","JUMPING_ROPE","KAYAKING","KETTLEBELL_TRAINING","KICKBOXING","KITESURFING","MARTIAL_ARTS","MEDITATION","MIXED_MARTIAL_ARTS","P90X_EXERCISES","PARAGLIDING","PILATES","POLO","RACQUETBALL","ROCK_CLIMBING","ROWING","ROWING_MACHINE","RUGBY","JOGGING","RUNNING_ON_SAND","TREADMILL_RUNNING","SAILING","SCUBA_DIVING","SKATEBOARDING","SKATING","CROSS_SKATING","INDOOR_ROLLERBLADING","SKIING","BACK_COUNTRY_SKIING","CROSS_COUNTRY_SKIING","DOWNHILL_SKIING","KITE_SKIING","ROLLER_SKIING","SLEDDING","SNOWBOARDING","SNOWMOBILE","SNOWSHOEING","SQUASH","STAIR_CLIMBING","STAIR_CLIMBING_MACHINE","STAND_UP_PADDLEBOARDING","STRENGTH_TRAINING","SURFING","SWIMMING","SWIMMING_SWIMMING_POOL","SWIMMING_OPEN_WATER","TABLE_TENNIS","TEAM_SPORTS","TENNIS","TREADMILL","VOLLEYBALL","VOLLEYBALL_BEACH","VOLLEYBALL_INDOOR","WAKEBOARDING","WALKING_FITNESS","NORDIC_WALKING","WALKING_TREADMILL","WATERPOLO","WEIGHTLIFTING","WHEELCHAIR","WINDSURFING","YOGA","ZUMBA","DIVING","ERGOMETER","ICE_SKATING","INDOOR_SKATING","CURLING","OTHER","CROSSFIT","HIIT","INTERVAL_TRAINING","WALKING_STROLLER","ELEVATOR","ESCALATOR","ARCHERY","SOFTBALL","GUIDED_BREATHING","CARDIO_TRAINING","LACROSSE","STRETCHING","TRIATHLON","INLINE_SKATING","SKY_DIVING","PADDLING","MOUNTAINEERING","FISHING","WATER_SKIING","INDOOR_RUNNING"],"type":"string","description":"The type of activity performed for the associated workout","examples":["RUNNING"]},"Type3":{"title":"Type3","enum":["UNKNOWN","BREAKFAST","MORNING_SNACK","LUNCH","AFTERNOON_SNACK","DINNER","SNACK"],"type":"string","description":"Enum representing the category the consumed food/meal falls under (i.e. Breakfast/Lunch/Dinner etc","examples":["BREAKFAST"]},"Type4":{"title":"Type4","enum":["STEP","REPEAT_STEP"],"type":"string","description":"Type of workout step - either repeat or one-off"},"Type13":{"title":"Type13","enum":["IN_VEHICLE","BIKING","STILL","UNKNOWN","TILTING","WALKING","RUNNING","AEROBICS","BADMINTON","BASEBALL","BASKETBALL","BIATHLON","HANDBIKING","MOUNTAIN_BIKING","ROAD_BIKING","SPINNING","STATIONARY_BIKING","UTILITY_BIKING","BOXING","CALISTHENICS","CIRCUIT_TRAINING","CRICKET","DANCING","ELLIPTICAL","FENCING","AMERICAN_FOOTBALL","AUSTRALIAN_FOOTBALL","ENGLISH_FOOTBALL","FRISBEE","GARDENING","GOLF","GYMNASTICS","HANDBALL","HIKING","HOCKEY","HORSEBACK_RIDING","HOUSEWORK","JUMPING_ROPE","KAYAKING","KETTLEBELL_TRAINING","KICKBOXING","KITESURFING","MARTIAL_ARTS","MEDITATION","MIXED_MARTIAL_ARTS","P90X_EXERCISES","PARAGLIDING","PILATES","POLO","RACQUETBALL","ROCK_CLIMBING","ROWING","ROWING_MACHINE","RUGBY","JOGGING","RUNNING_ON_SAND","TREADMILL_RUNNING","SAILING","SCUBA_DIVING","SKATEBOARDING","SKATING","CROSS_SKATING","INDOOR_ROLLERBLADING","SKIING","BACK_COUNTRY_SKIING","CROSS_COUNTRY_SKIING","DOWNHILL_SKIING","KITE_SKIING","ROLLER_SKIING","SLEDDING","SNOWBOARDING","SNOWMOBILE","SNOWSHOEING","SQUASH","STAIR_CLIMBING","STAIR_CLIMBING_MACHINE","STAND_UP_PADDLEBOARDING","STRENGTH_TRAINING","SURFING","SWIMMING","SWIMMING_SWIMMING_POOL","SWIMMING_OPEN_WATER","TABLE_TENNIS","TEAM_SPORTS","TENNIS","TREADMILL","VOLLEYBALL","VOLLEYBALL_BEACH","VOLLEYBALL_INDOOR","WAKEBOARDING","WALKING_FITNESS","NORDIC_WALKING","WALKING_TREADMILL","WATERPOLO","WEIGHTLIFTING","WHEELCHAIR","WINDSURFING","YOGA","ZUMBA","DIVING","ERGOMETER","ICE_SKATING","INDOOR_SKATING","CURLING","OTHER","CROSSFIT","HIIT","INTERVAL_TRAINING","WALKING_STROLLER","ELEVATOR","ESCALATOR","ARCHERY","SOFTBALL","GUIDED_BREATHING","CARDIO_TRAINING","LACROSSE","STRETCHING","TRIATHLON","INLINE_SKATING","SKY_DIVING","PADDLING","MOUNTAINEERING","FISHING","WATER_SKIING","INDOOR_RUNNING"],"type":"string","description":"The name - either user-entered or given by the fitness data provider - of the associated workout plan"},"Types":{"title":"Types","type":"object","properties":{"activity":{"type":"boolean","examples":[true]},"body":{"type":"boolean","examples":[false]},"nutrition":{"type":"boolean","examples":[false]},"daily":{"type":"boolean","examples":[false]},"sleep":{"type":"boolean","examples":[false]},"menstruation":{"type":"boolean","examples":[false]}},"description":"Indicates the types of data available through the provider"},"UploadType":{"title":"UploadType","enum":["UNKNOWN","AUTOMATIC","MANUAL","UPDATE","DELETE","PENDING"],"type":"string","description":"The upload type for the associated workout, providing information on whether this was an automatic workout or user-entered"},"UploadType1":{"title":"UploadType1","enum":["UNKNOWN","AUTOMATIC","MANUAL","UPDATE","DELETE","PENDING"],"type":"string","description":"The upload type for data in the associated day, providing information on whether data was automatically uploaded or user-entered. If any data point in a day is altered, the day should be classed as manual"},"UserInfo400Error1":{"title":"UserInfo400Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"UserInfo404Error1":{"title":"UserInfo404Error1","type":"object","properties":{"message":{"type":"string","description":"a detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status14"},{"description":"indicates that an error happened (value is error)"}]}}},"UserInfoResponse":{"title":"UserInfoResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"status":{"allOf":[{"$ref":"#/components/schemas/Status"},{}]},"is_authenticated":{"type":"boolean"}},"description":"User information for one connection (single User object)"},"Users400Error1":{"title":"Users400Error1","type":"object","properties":{"message":{"type":"string","description":"A detailed message describing the error"},"status":{"allOf":[{"$ref":"#/components/schemas/Status19"},{"description":"Indicates an error happened"}]}}},"UsersRequest":{"title":"UsersRequest","type":"object","properties":{"reference_id":{"type":"string","description":"Identifier on your system to associate with this user","examples":["updatedUser123"]},"active":{"type":"boolean","description":"Whether the user should remain active"}}},"UsersResponse":{"title":"UsersResponse","type":"object","properties":{"user":{"allOf":[{"$ref":"#/components/schemas/User"},{}]},"status":{"allOf":[{"$ref":"#/components/schemas/Status18"},{"description":"Indicates that the request was successful","examples":["success"]}]}}},"Zone":{"title":"Zone","enum":["ZONE_0","ZONE_1","ZONE_2","ZONE_3","ZONE_4","ZONE_5","OTHER"],"type":"string","examples":["ZONE_2"]},"PlannedWorkoutStepTargets":{"oneOf":[{"$ref":"#/components/schemas/PlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/CadencePlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/HRPlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/PowerPlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/SpeedPlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/PacePlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/TSSPlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/IFPlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/RepetitionPlannedWorkoutStepTarget"},{"$ref":"#/components/schemas/SwimStrokePlannedWorkoutStepTarget"}],"discriminator":{"propertyName":"type","mapping":{"PlannedWorkoutStepTarget":"PlannedWorkoutStepTarget","CadencePlannedWorkoutStepTarget":"CadencePlannedWorkoutStepTarget","HRPlannedWorkoutStepTarget":"HRPlannedWorkoutStepTarget","PowerPlannedWorkoutStepTarget":"PowerPlannedWorkoutStepTarget","SpeedPlannedWorkoutStepTarget":"SpeedPlannedWorkoutStepTarget","PacePlannedWorkoutStepTarget":"PacePlannedWorkoutStepTarget","TSSPlannedWorkoutStepTarget":"TSSPlannedWorkoutStepTarget","IFPlannedWorkoutStepTarget":"IFPlannedWorkoutStepTarget","RepetitionPlannedWorkoutStepTarget":"RepetitionPlannedWorkoutStepTarget","SwimStrokePlannedWorkoutStepTarget":"SwimStrokePlannedWorkoutStepTarget"}}},"PlannedWorkoutStepDurations":{"oneOf":[{"$ref":"#/components/schemas/PlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/TimePlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/PowerAbovePlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/PowerBelowPlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/FixedRestPlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/CaloriesPlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/HRAbovePlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/HRBelowPlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/RepsPlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/DistancePlannedWorkoutStepDuration"},{"$ref":"#/components/schemas/StepsPlannedWorkoutStepDuration"}],"discriminator":{"propertyName":"type","mapping":{"PlannedWorkoutStepDuration":"PlannedWorkoutStepDuration","TimePlannedWorkoutStepDuration":"TimePlannedWorkoutStepDuration","PowerAbovePlannedWorkoutStepDuration":"PowerAbovePlannedWorkoutStepDuration","PowerBelowPlannedWorkoutStepDuration":"PowerBelowPlannedWorkoutStepDuration","FixedRestPlannedWorkoutStepDuration":"FixedRestPlannedWorkoutStepDuration","CaloriesPlannedWorkoutStepDuration":"CaloriesPlannedWorkoutStepDuration","HRAbovePlannedWorkoutStepDuration":"HRAbovePlannedWorkoutStepDuration","HRBelowPlannedWorkoutStepDuration":"HRBelowPlannedWorkoutStepDuration","RepsPlannedWorkoutStepDuration":"RepsPlannedWorkoutStepDuration","DistancePlannedWorkoutStepDuration":"DistancePlannedWorkoutStepDuration","StepsPlannedWorkoutStepDuration":"StepsPlannedWorkoutStepDuration"}}},"PlannedWorkoutSteps":{"oneOf":[{"$ref":"#/components/schemas/PlannedWorkoutStep"},{"$ref":"#/components/schemas/PlannedWorkoutRepeatStep"},{"$ref":"#/components/schemas/SwimmingPlannedWorkoutStep"},{"$ref":"#/components/schemas/CardioPlannedWorkoutStep"},{"$ref":"#/components/schemas/StrengthPlannedWorkoutStep"},{"$ref":"#/components/schemas/YogaPlannedWorkoutStep"},{"$ref":"#/components/schemas/PilatesPlannedWorkoutStep"},{"$ref":"#/components/schemas/RunningPlannedWorkoutStep"},{"$ref":"#/components/schemas/CyclingPlannedWorkoutStep"}],"discriminator":{"propertyName":"type","mapping":{"PlannedWorkoutStep":"PlannedWorkoutStep","PlannedWorkoutRepeatStep":"PlannedWorkoutRepeatStep","SwimmingPlannedWorkoutStep":"SwimmingPlannedWorkoutStep","CardioPlannedWorkoutStep":"CardioPlannedWorkoutStep","StrengthPlannedWorkoutStep":"StrengthPlannedWorkoutStep","YogaPlannedWorkoutStep":"YogaPlannedWorkoutStep","PilatesPlannedWorkoutStep":"PilatesPlannedWorkoutStep","RunningPlannedWorkoutStep":"RunningPlannedWorkoutStep","CyclingPlannedWorkoutStep":"CyclingPlannedWorkoutStep"}}},"WebhookEvents":{"oneOf":[{"$ref":"#/components/schemas/UserAuthWebhook"},{"$ref":"#/components/schemas/UserReauthWebhook"},{"$ref":"#/components/schemas/UserDeauthWebhook"},{"$ref":"#/components/schemas/AccessRevokedWebhook"},{"$ref":"#/components/schemas/GoogleNoDataSourceWebhook"},{"$ref":"#/components/schemas/ConnectionErrorWebhook"},{"$ref":"#/components/schemas/DataProcessingWebhook"},{"$ref":"#/components/schemas/LargeRequestSendingWebhook"},{"$ref":"#/components/schemas/AuthenticationFailedWebhook"},{"$ref":"#/components/schemas/ConnectionDegradedWebhook"}],"discriminator":{"propertyName":"type","mapping":{"UserAuthWebhook":"UserAuthWebhook","UserReauthWebhook":"UserReauthWebhook","UserDeauthWebhook":"UserDeauthWebhook","AccessRevokedWebhook":"AccessRevokedWebhook","GoogleNoDataSourceWebhook":"GoogleNoDataSourceWebhook","ConnectionErrorWebhook":"ConnectionErrorWebhook","DataProcessingWebhook":"DataProcessingWebhook","LargeRequestSendingWebhook":"LargeRequestSendingWebhook"}}}}},"tags":[{"name":"Authentication","description":""},{"name":"User Management","description":""},{"name":"Data retrieval","description":""},{"name":"Data writing","description":""},{"name":"User Info","description":""},{"name":"Integrations","description":""}]}